{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Output, Input, HostBinding, HostListener, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction CarouselComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.counter);\n  }\n}\nfunction CarouselComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 9);\n  }\n  if (rf & 2) {\n    const i_r6 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"carousel-dot-active\", i_r6 === ctx_r4.activeDotIndex);\n  }\n}\nfunction CarouselComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, CarouselComponent_div_5_div_1_Template, 1, 2, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.dotsArr);\n  }\n}\nfunction CarouselComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function CarouselComponent_div_6_Template_div_click_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.prev());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function CarouselComponent_div_6_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.next());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"carousel-arrows-outside\", ctx_r3.arrowsOutside)(\"carousel-dark-arrows\", ctx_r3.arrowsTheme === \"dark\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"carousel-arrow-disabled\", ctx_r3.isPrevArrowDisabled());\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"carousel-arrow-disabled\", ctx_r3.isNextArrowDisabled());\n  }\n}\nconst _c0 = [\"*\"];\nclass Touches {\n  constructor(properties) {\n    this.eventType = undefined;\n    this.handlers = {};\n    this.startX = 0;\n    this.startY = 0;\n    this.lastTap = 0;\n    this.doubleTapMinTimeout = 300;\n    this.tapMinTimeout = 200;\n    this.touchstartTime = 0;\n    this.i = 0;\n    this.isMousedown = false;\n    this._touchListeners = {\n      touchstart: 'handleTouchstart',\n      touchmove: 'handleTouchmove',\n      touchend: 'handleTouchend'\n    };\n    this._mouseListeners = {\n      mousedown: 'handleMousedown',\n      mousemove: 'handleMousemove',\n      mouseup: 'handleMouseup',\n      wheel: 'handleWheel'\n    };\n    this._otherListeners = {\n      resize: 'handleResize'\n    };\n    /*\r\n     * Listeners\r\n     */\n    /* Touchstart */\n    this.handleTouchstart = event => {\n      this.elementPosition = this.getElementPosition();\n      this.touchstartTime = new Date().getTime();\n      if (this.eventType === undefined) {\n        this.getTouchstartPosition(event);\n      }\n      this.runHandler('touchstart', event);\n    };\n    /* Touchmove */\n    this.handleTouchmove = event => {\n      const {\n        touches\n      } = event;\n      // Pan\n      if (this.detectPan(touches)) {\n        this.runHandler('pan', event);\n      }\n      // Pinch\n      if (this.detectPinch(event)) {\n        this.runHandler('pinch', event);\n      }\n      // Linear swipe\n      switch (this.detectLinearSwipe(event)) {\n        case 'horizontal-swipe':\n          event.swipeType = 'horizontal-swipe';\n          this.runHandler('horizontal-swipe', event);\n          break;\n        case 'vertical-swipe':\n          event.swipeType = 'vertical-swipe';\n          this.runHandler('vertical-swipe', event);\n          break;\n      }\n      // Linear swipe\n      if (this.detectLinearSwipe(event) || this.eventType === 'horizontal-swipe' || this.eventType === 'vertical-swipe') {\n        this.handleLinearSwipe(event);\n      }\n    };\n    /* Touchend */\n    this.handleTouchend = event => {\n      const {\n        touches\n      } = event;\n      // Double Tap\n      if (this.detectDoubleTap()) {\n        this.runHandler('double-tap', event);\n      }\n      // Tap\n      this.detectTap();\n      this.runHandler('touchend', event);\n      this.eventType = 'touchend';\n      if (touches && touches.length === 0) {\n        this.eventType = undefined;\n        this.i = 0;\n      }\n    };\n    /* Mousedown */\n    this.handleMousedown = event => {\n      this.isMousedown = true;\n      this.elementPosition = this.getElementPosition();\n      this.touchstartTime = new Date().getTime();\n      if (this.eventType === undefined) {\n        this.getMousedownPosition(event);\n      }\n      this.runHandler('mousedown', event);\n    };\n    /* Mousemove */\n    this.handleMousemove = event => {\n      // event.preventDefault();\n      if (!this.isMousedown) {\n        return;\n      }\n      // Pan\n      this.runHandler('pan', event);\n      // Linear swipe\n      switch (this.detectLinearSwipe(event)) {\n        case 'horizontal-swipe':\n          event.swipeType = 'horizontal-swipe';\n          this.runHandler('horizontal-swipe', event);\n          break;\n        case 'vertical-swipe':\n          event.swipeType = 'vertical-swipe';\n          this.runHandler('vertical-swipe', event);\n          break;\n      }\n      // Linear swipe\n      if (this.detectLinearSwipe(event) || this.eventType === 'horizontal-swipe' || this.eventType === 'vertical-swipe') {\n        this.handleLinearSwipe(event);\n      }\n    };\n    /* Mouseup */\n    this.handleMouseup = event => {\n      // Tap\n      this.detectTap();\n      this.isMousedown = false;\n      this.runHandler('mouseup', event);\n      this.eventType = undefined;\n      this.i = 0;\n    };\n    /* Wheel */\n    this.handleWheel = event => {\n      this.runHandler('wheel', event);\n    };\n    /* Resize */\n    this.handleResize = event => {\n      this.runHandler('resize', event);\n    };\n    this.properties = properties;\n    this.element = this.properties.element;\n    this.elementPosition = this.getElementPosition();\n    this.toggleEventListeners('addEventListener');\n  }\n  get touchListeners() {\n    return this.properties.touchListeners ? this.properties.touchListeners : this._touchListeners;\n  }\n  get mouseListeners() {\n    return this.properties.mouseListeners ? this.properties.mouseListeners : this._mouseListeners;\n  }\n  get otherListeners() {\n    return this.properties.otherListeners ? this.properties.otherListeners : this._otherListeners;\n  }\n  destroy() {\n    this.toggleEventListeners('removeEventListener');\n  }\n  toggleEventListeners(action) {\n    let listeners;\n    if (this.properties.listeners === 'mouse and touch') {\n      listeners = Object.assign(this.touchListeners, this.mouseListeners);\n    } else {\n      listeners = this.detectTouchScreen() ? this.touchListeners : this.mouseListeners;\n    }\n    if (this.properties.resize) {\n      listeners = Object.assign(listeners, this.otherListeners);\n    }\n    for (const listener in listeners) {\n      const handler = listeners[listener];\n      // Window\n      if (listener === 'resize') {\n        if (action === 'addEventListener') {\n          window.addEventListener(listener, this[handler], false);\n        }\n        if (action === 'removeEventListener') {\n          window.removeEventListener(listener, this[handler], false);\n        }\n        // Document\n      } else if (listener === 'mouseup' || listener === 'mousemove') {\n        if (action === 'addEventListener') {\n          document.addEventListener(listener, this[handler], {\n            passive: false\n          });\n        }\n        if (action === 'removeEventListener') {\n          document.removeEventListener(listener, this[handler], false);\n        }\n        // Element\n      } else {\n        if (action === 'addEventListener') {\n          this.element.addEventListener(listener, this[handler], false);\n        }\n        if (action === 'removeEventListener') {\n          this.element.removeEventListener(listener, this[handler], false);\n        }\n      }\n    }\n  }\n  addEventListeners(listener) {\n    const handler = this._mouseListeners[listener];\n    window.addEventListener(listener, this[handler], false);\n  }\n  removeEventListeners(listener) {\n    const handler = this._mouseListeners[listener];\n    window.removeEventListener(listener, this[handler], false);\n  }\n  handleLinearSwipe(event) {\n    // event.preventDefault();\n    this.i++;\n    if (this.i > 3) {\n      this.eventType = this.getLinearSwipeType(event);\n    }\n    if (this.eventType === 'horizontal-swipe') {\n      this.runHandler('horizontal-swipe', event);\n    }\n    if (this.eventType === 'vertical-swipe') {\n      this.runHandler('vertical-swipe', event);\n    }\n  }\n  runHandler(eventName, response) {\n    if (this.handlers[eventName]) {\n      this.handlers[eventName](response);\n    }\n  }\n  /*\r\n   * Detection\r\n   */\n  detectPan(touches) {\n    return touches.length === 1 && !this.eventType || this.eventType === 'pan';\n  }\n  detectDoubleTap() {\n    if (this.eventType != undefined) {\n      return;\n    }\n    const currentTime = new Date().getTime();\n    const tapLength = currentTime - this.lastTap;\n    clearTimeout(this.doubleTapTimeout);\n    if (tapLength < this.doubleTapMinTimeout && tapLength > 0) {\n      return true;\n    }\n    this.doubleTapTimeout = setTimeout(() => {\n      clearTimeout(this.doubleTapTimeout);\n    }, this.doubleTapMinTimeout);\n    this.lastTap = currentTime;\n    return undefined;\n  }\n  detectTap() {\n    if (this.eventType != undefined) {\n      return;\n    }\n    const currentTime = new Date().getTime();\n    const tapLength = currentTime - this.touchstartTime;\n    if (tapLength > 0) {\n      if (tapLength < this.tapMinTimeout) {\n        this.runHandler('tap', event);\n      } else {\n        this.runHandler('longtap', event);\n      }\n    }\n  }\n  detectPinch(event) {\n    const {\n      touches\n    } = event;\n    return touches.length === 2 && this.eventType === undefined || this.eventType === 'pinch';\n  }\n  detectLinearSwipe(event) {\n    const {\n      touches\n    } = event;\n    if (touches) {\n      if (touches.length === 1 && !this.eventType || this.eventType === 'horizontal-swipe' || this.eventType === 'vertical-swipe') {\n        return this.getLinearSwipeType(event);\n      }\n    } else if (!this.eventType || this.eventType === 'horizontal-swipe' || this.eventType === 'vertical-swipe') {\n      return this.getLinearSwipeType(event);\n    }\n    return undefined;\n  }\n  getLinearSwipeType(event) {\n    if (this.eventType !== 'horizontal-swipe' && this.eventType !== 'vertical-swipe') {\n      const movementX = Math.abs(this.moveLeft(0, event) - this.startX);\n      const movementY = Math.abs(this.moveTop(0, event) - this.startY);\n      if (movementY * 3 > movementX) {\n        return 'vertical-swipe';\n      }\n      return 'horizontal-swipe';\n    }\n    return this.eventType;\n  }\n  getElementPosition() {\n    return this.element.getBoundingClientRect();\n  }\n  getTouchstartPosition(event) {\n    this.startX = event.touches[0].clientX - this.elementPosition.left;\n    this.startY = event.touches[0].clientY - this.elementPosition.top;\n  }\n  getMousedownPosition(event) {\n    this.startX = event.clientX - this.elementPosition.left;\n    this.startY = event.clientY - this.elementPosition.top;\n  }\n  moveLeft(index, event) {\n    const {\n      touches\n    } = event;\n    if (touches) {\n      return touches[index].clientX - this.elementPosition.left;\n    }\n    return event.clientX - this.elementPosition.left;\n  }\n  moveTop(index, event) {\n    const {\n      touches\n    } = event;\n    if (touches) {\n      return touches[index].clientY - this.elementPosition.top;\n    }\n    return event.clientY - this.elementPosition.top;\n  }\n  detectTouchScreen() {\n    const prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\n    const mq = function (query) {\n      return window.matchMedia(query).matches;\n    };\n    if ('ontouchstart' in window) {\n      return true;\n    }\n    // include the 'heartz' as a way to have a non matching MQ to help terminate the join\n    // https://git.io/vznFH\n    const query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\n    return mq(query);\n  }\n  /* Public properties and methods */\n  on(event, handler) {\n    if (event) {\n      this.handlers[event] = handler;\n    }\n  }\n}\nclass Carousel {\n  constructor(properties, utils, cells, container, slide) {\n    this.properties = properties;\n    this.utils = utils;\n    this.cells = cells;\n    this.container = container;\n    this.slide = slide;\n    this.autoplayId = null;\n    this.handleTouchstart = event => {\n      this.container.handleTouchstart();\n      this.slide.handleTouchstart(event);\n    };\n    this.handleHorizontalSwipe = event => {\n      this.container.handleHorizontalSwipe();\n    };\n    this.handleTouchend = event => {\n      if (this.properties.freeScroll) {\n        this.container.handleTouchend();\n      } else {\n        this.container.handleTouchend(true);\n        this.slide.handleTouchend(event);\n      }\n    };\n    this.isNextArrowDisabled = () => this.slide.isNextArrowDisabled();\n    this.isPrevArrowDisabled = () => this.slide.isPrevArrowDisabled();\n    this.init();\n  }\n  get cellLength() {\n    return this.cells.cellLength;\n  }\n  get lastCellIndex() {\n    return this.cells.cellLength - 1;\n  }\n  get overflowCellsLimit() {\n    return this.utils.overflowCellsLimit;\n  }\n  get autoplayIsPossible() {\n    return this.properties.autoplayIsPossible;\n  }\n  get margin() {\n    return this.properties.margin;\n  }\n  get minSwipeDistance() {\n    return this.properties.minSwipeDistance;\n  }\n  get transitionDuration() {\n    return this.properties.transitionDuration;\n  }\n  get transitionTimingFunction() {\n    return this.properties.transitionTimingFunction;\n  }\n  get fullCellWidth() {\n    return this.properties.cellWidth + this.margin;\n  }\n  get numberOfVisibleCells() {\n    return this.utils.numberOfVisibleCells;\n  }\n  get slideCounter() {\n    return this.slide.counter;\n  }\n  updateProperties(properties) {\n    this.properties = properties;\n  }\n  init() {\n    this.cellsElement = this.properties.cellsElement;\n    this.visibleWidth = this.properties.visibleWidth || this.cellsElement.parentElement.clientWidth;\n  }\n  destroy() {\n    clearInterval(this.autoplayId);\n  }\n  lineUpCells() {\n    this.cells.lineUp();\n  }\n  handleTransitionend() {\n    this.slide.handleTransitionend();\n  }\n  next(length = 1) {\n    if (!this.isNextArrowDisabled()) {\n      this.slide.next(length);\n    }\n  }\n  prev(length = 1) {\n    this.slide.prev(length);\n  }\n  autoplay() {\n    if (this.autoplayId === null) {\n      this.autoplayId = setInterval(() => {\n        if (this.autoplayIsPossible) {\n          this.next();\n        }\n      }, this.properties.autoplayInterval);\n    }\n  }\n  stopAutoplay() {\n    if (this.autoplayId != null) {\n      clearInterval(this.autoplayId);\n      this.autoplayId = null;\n    }\n  }\n}\nclass Container {\n  constructor(carouselProperties, utils, cells) {\n    this.carouselProperties = carouselProperties;\n    this.utils = utils;\n    this.cells = cells;\n    /* The index of the new position relative to\r\n     * the active index, for example -1 or +1\r\n     */\n    this.initialPositionX = 0;\n    this.initialElementPositionX = 0;\n    this.pullLimit = 100;\n    this.startTime = 0;\n    this.startX = 0;\n    this.moveX = 0;\n    this.isSwipeInProgress = false;\n    this.init();\n  }\n  get visibleWidth() {\n    return this.utils.visibleWidth;\n  }\n  get overflowCellsLimit() {\n    return this.utils.overflowCellsLimit;\n  }\n  get element() {\n    return this.carouselProperties.cellsElement;\n  }\n  get freeScroll() {\n    return this.carouselProperties.freeScroll;\n  }\n  get fullCellWidth() {\n    return this.carouselProperties.cellWidth + this.carouselProperties.margin;\n  }\n  get numberOfVisibleCells() {\n    return this.utils.numberOfVisibleCells;\n  }\n  get transitionDuration() {\n    return this.carouselProperties.transitionDuration;\n  }\n  get transitionTimingFunction() {\n    return this.carouselProperties.transitionTimingFunction;\n  }\n  get cellLength() {\n    return this.cells.cellLength;\n  }\n  get tooFewCells() {\n    return this.numberOfVisibleCells > this.cellLength;\n  }\n  get disabled() {\n    return this.tooFewCells;\n  }\n  get margin() {\n    return this.carouselProperties.margin;\n  }\n  updateProperties(carouselProperties) {\n    this.carouselProperties = carouselProperties;\n  }\n  init() {\n    this.setWidth();\n  }\n  handleTouchstart() {\n    this.startX = this.utils.getStartX(event);\n    this.startTime = new Date().getTime();\n    this.initialElementPositionX = this.getInitialElementPositionX();\n  }\n  handleHorizontalSwipe() {\n    if (this.disabled) {\n      return;\n    }\n    if (!this.isSwipeInProgress) {\n      this.startX = this.utils.getStartX(event);\n      this.startTime = new Date().getTime();\n      this.initialElementPositionX = this.getInitialElementPositionX();\n    }\n    this.isSwipeInProgress = true;\n    this.moveX = this.utils.getMoveX(event);\n    this.move();\n  }\n  handleTouchend(simpleProcessing = false) {\n    if (this.disabled) {\n      return;\n    }\n    /* If touchend was passed to the Slide class */\n    if (simpleProcessing) {\n      this.isSwipeInProgress = false;\n      return;\n    }\n    this.isSwipeInProgress = false;\n    this.finishMoving();\n    this.clearInitialValues();\n  }\n  move() {\n    let positionX = this.getMovePositionX();\n    const isPulled = this.detectPulled();\n    const direction = this.getDirection();\n    if (isPulled) {\n      if (isPulled.edge === 'left' && direction === 'right' || isPulled.edge === 'right' && direction === 'left') {\n        positionX = this.slowdownOnPull(positionX);\n      }\n    }\n    this.transformPositionX(positionX, 0);\n    if (this.freeScroll) {\n      this.initialPositionX = positionX;\n    }\n    if (isPulled) {\n      if (isPulled.edge === 'left' && isPulled.overflowX > this.pullLimit) {\n        this.initialPositionX = 0;\n      }\n      if (isPulled.edge === 'right' && isPulled.overflowX > this.pullLimit) {\n        this.initialPositionX = positionX;\n      }\n    }\n  }\n  getMovePositionX() {\n    const distance = this.getDistance();\n    return this.initialElementPositionX - distance;\n  }\n  getDistance() {\n    return this.startX - this.moveX;\n  }\n  /* If the container is pulled out of the left or right border */\n  detectPulled() {\n    const currentPositionX = this.getCurrentPositionX();\n    if (currentPositionX > 0) {\n      return {\n        edge: 'left',\n        positionX: currentPositionX,\n        overflowX: Math.abs(currentPositionX)\n      };\n    }\n    if (currentPositionX < this.getEndPosition()) {\n      return {\n        edge: 'right',\n        positionX: currentPositionX,\n        overflowX: Math.abs(currentPositionX - this.getEndPosition())\n      };\n    }\n    return undefined;\n  }\n  slowdownOnPull(_positionX) {\n    let distance = Math.abs(this.getDistance());\n    const endPosition = this.getEndPosition();\n    const isPulled = this.detectPulled();\n    if (!isPulled) {\n      return 0;\n    }\n    const decelerationRatio = 3 + isPulled.overflowX / 50;\n    let positionX = 0;\n    if (isPulled.edge === 'left') {\n      if (this.initialElementPositionX < 0) {\n        distance -= Math.abs(this.initialElementPositionX);\n      }\n      const rubberPositionX = distance / decelerationRatio;\n      positionX = rubberPositionX;\n      if (this.initialElementPositionX > 0) {\n        positionX = this.initialElementPositionX + rubberPositionX;\n      }\n      if (positionX > this.pullLimit) {\n        positionX = this.pullLimit;\n      }\n    }\n    if (isPulled.edge === 'right') {\n      const rubberPositionX = endPosition + (this.initialElementPositionX - distance - endPosition) / decelerationRatio;\n      const containerWidth = this.getWidth();\n      positionX = rubberPositionX;\n      if (this.initialElementPositionX < -(containerWidth - this.visibleWidth)) {\n        positionX = containerWidth - this.visibleWidth + this.initialElementPositionX + rubberPositionX;\n      }\n      if (positionX < endPosition - this.pullLimit) {\n        positionX = endPosition - this.pullLimit;\n      }\n    }\n    return positionX;\n  }\n  finishMoving() {\n    const positionX = this.getMovePositionX();\n    let newPositionX = 0;\n    if (this.freeScroll) {\n      newPositionX = this.getInertia();\n    }\n    /* Align container while pulling */\n    newPositionX = this.getAlignedPositionOnPull(newPositionX);\n    this.transformPositionX(newPositionX);\n    this.setInitialPosition(positionX);\n  }\n  /* Returns the new position of the container with inertia */\n  getInertia() {\n    const distance = this.getDistance();\n    const currentTime = new Date().getTime();\n    const tapLength = currentTime - this.startTime;\n    const inertia = distance / tapLength * 100;\n    return this.initialPositionX - inertia;\n  }\n  getAlignedPositionOnPull(newPositionX) {\n    const direction = this.getDirection();\n    if (direction === 'left') {\n      const endPosition = this.getEndPosition();\n      if (newPositionX < endPosition) {\n        return endPosition;\n      }\n    }\n    return newPositionX;\n  }\n  getCurrentPositionX() {\n    const parentPosition = this.element.parentElement.getBoundingClientRect();\n    const position = this.element.getBoundingClientRect();\n    return position.left - parentPosition.left;\n  }\n  getEndPosition() {\n    const width = this.getWidth();\n    const visibleWidth = this.element.parentElement.clientWidth;\n    return visibleWidth - width;\n  }\n  transformPositionX(value, duration = this.transitionDuration) {\n    if (value === undefined) {\n      return;\n    }\n    this.element.style.transition = `transform ${duration}ms ${this.transitionTimingFunction}`;\n    this.element.style.transform = `translateX(${value}px)`;\n  }\n  getWidth() {\n    return this.cellLength * this.fullCellWidth;\n  }\n  setWidth() {\n    const width = this.getWidth();\n    this.element.style.width = `${width}px`;\n  }\n  setInitialPosition(position) {\n    this.initialPositionX = position;\n  }\n  getElementPosition() {\n    return this.element.getBoundingClientRect();\n  }\n  getInitialElementPositionX() {\n    const carouselElementPosition = this.utils.getCarouselElementPosition().left;\n    return this.getElementPosition().left - carouselElementPosition;\n  }\n  clearInitialValues() {\n    this.startX = this.moveX = 0;\n  }\n  getDirection() {\n    const direction = Math.sign(this.startX - this.moveX);\n    if (direction === -1) {\n      return 'right';\n    }\n    if (direction === 1) {\n      return 'left';\n    }\n    return undefined;\n  }\n}\nclass Cells {\n  constructor(carouselProperties, utils) {\n    this.carouselProperties = carouselProperties;\n    this.utils = utils;\n    this.counter = 0;\n    this.init(carouselProperties);\n  }\n  get cellLength() {\n    return this.cells ? this.cells.length : 0;\n  }\n  get fullCellWidth() {\n    return this.carouselProperties.cellWidth + this.carouselProperties.margin;\n  }\n  get cellLengthInLightDOMMode() {\n    return this.cellLength;\n  }\n  get numberOfVisibleCells() {\n    return this.utils.numberOfVisibleCells;\n  }\n  get overflowCellsLimit() {\n    return this.utils.overflowCellsLimit;\n  }\n  updateProperties(carouselProperties) {\n    this.carouselProperties = carouselProperties;\n  }\n  lineUp() {\n    const cells = this.element ? this.element.children : [];\n    for (let i = 0; i < cells.length; i++) {\n      const cell = cells[i];\n      const positionX = this.getCellPositionInContainer(i);\n      cell.style.transform = `translateX(${positionX}px)`;\n      cell.style.width = `${this.carouselProperties.cellWidth}px`;\n    }\n  }\n  ifSequenceOfCellsIsChanged() {\n    const cells = this.element.children;\n    return cells[0].style.transform !== 'translateX(0px)';\n  }\n  getCellPositionInContainer(cellIndexInDOMTree) {\n    return cellIndexInDOMTree * this.fullCellWidth;\n  }\n  setCounter(value) {\n    this.counter = value;\n  }\n  init(carouselProperties) {\n    this.element = this.carouselProperties.cellsElement;\n    this.cells = this.element.children;\n    this.visibleWidth = this.carouselProperties.visibleWidth || this.element.parentElement.clientWidth;\n  }\n}\nclass Slide {\n  constructor(carouselProperties, utils, cells, container) {\n    this.carouselProperties = carouselProperties;\n    this.utils = utils;\n    this.cells = cells;\n    this.container = container;\n    this.slideLength = 0;\n    this.isSlideInProgress = false;\n    this.counter = 0;\n    this._counter = 0;\n    this.distance = 0;\n    this.distanceAbs = 0;\n    this.isNotClickOnArrow = false;\n    this.initialPositionX = 0;\n    this.currentPositionX = 0;\n    /* The slide length has been limited by the limitSlideLength() method */\n    this.isSlideLengthLimited = false;\n    this.init();\n  }\n  get fullCellWidth() {\n    return this.carouselProperties.cellWidth + this.carouselProperties.margin;\n  }\n  get margin() {\n    return this.carouselProperties.margin;\n  }\n  get minSwipeDistance() {\n    return this.carouselProperties.minSwipeDistance;\n  }\n  get numberOfVisibleCells() {\n    return this.utils.numberOfVisibleCells;\n  }\n  get visibleCellsOverflowContainer() {\n    return this.utils.visibleCellsOverflowContainer;\n  }\n  /* The position to which the container returns after each slide\r\n   * in the light DUM tree mode.\r\n   */\n  get fixedContainerPosition() {\n    return -(this.overflowCellsLimit * this.fullCellWidth);\n  }\n  get overflowCellsLimit() {\n    return this.utils.overflowCellsLimit;\n  }\n  /* Number of cell elements in the DUM tree */\n  get cellLength() {\n    return this.cells.cellLength;\n  }\n  updateProperties(carouselProperties) {\n    this.carouselProperties = carouselProperties;\n    this.setVisibleWidth();\n  }\n  init() {\n    this.visibleWidth = this.carouselProperties.visibleWidth || this.carouselProperties.hostElement.clientWidth;\n  }\n  handleTouchstart() {\n    /* Touchstart event is not called for arrow */\n    this.isNotClickOnArrow = true;\n    this.isSlideLengthLimited = false;\n    if (!this.isSlideInProgress) {\n      this.initialPositionX = this.container.getCurrentPositionX();\n    }\n  }\n  handleTouchend() {\n    if (!this.isNotClickOnArrow) {\n      return;\n    }\n    this.currentPositionX = this.container.getCurrentPositionX();\n    this.distanceAbs = Math.abs(this.initialPositionX - this.currentPositionX);\n    this.distance = this.initialPositionX - this.currentPositionX;\n    this.direction = this.getDirection();\n    this.isNotClickOnArrow = false;\n    this.handleSlide();\n  }\n  handleTransitionend() {\n    this.setCounter();\n    this.isSlideInProgress = false;\n  }\n  handleSlide(customSlideLength = undefined) {\n    const isUsingButton = customSlideLength;\n    let newPositionX;\n    if (isUsingButton && this.isSlideInProgress || !this.direction) {\n      return;\n    }\n    /* Custom slide length is used in arrows */\n    if (customSlideLength) {\n      this.slideLength = this.limitSlideLength(customSlideLength);\n      if (!this.isSlideInProgress) {\n        this.initialPositionX = this.container.getCurrentPositionX();\n      }\n    } else {\n      this.slideLength = this.getSlideLength(this.distanceAbs);\n    }\n    /* Store intermediate counter value */\n    this._counter = this.getPreliminaryCounter();\n    if (this.direction === 'left') {\n      if (!customSlideLength) {\n        this.slideLength = this.limitSlideLength(this.getSlideLength(this.distanceAbs));\n      }\n      this._counter = this.getPreliminaryCounter();\n      const isSlidesEnd = this.isSlidesEnd(this._counter);\n      newPositionX = this.getPositionByIndex(this._counter);\n      if (isSlidesEnd) {\n        this._counter = this.counter;\n        newPositionX = this.getPositionByIndex(this.counter);\n        this.slideLength = 0;\n      }\n    }\n    if (this.direction === 'right') {\n      if (!customSlideLength) {\n        this.slideLength = this.getSlideLength(this.distanceAbs);\n      }\n      if (this._counter < 0) {\n        this._counter = this.counter;\n        this.slideLength = this.counter;\n      }\n      newPositionX = this.getPositionByIndex(this.counter - this.slideLength);\n    }\n    if (this.container.getCurrentPositionX() !== newPositionX) {\n      this.isSlideInProgress = true;\n      this.container.transformPositionX(newPositionX);\n    }\n  }\n  next(length = 1) {\n    this.direction = 'left';\n    this.handleSlide(length);\n  }\n  prev(length = 1) {\n    this.direction = 'right';\n    this.handleSlide(length);\n  }\n  select(index) {\n    if (index > this.cellLength - 1) {\n      return;\n    }\n    if (index > this.counter) {\n      const length = index - this.counter;\n      this.next(length);\n    }\n    if (index < this.counter) {\n      const length = this.counter - index;\n      this.prev(length);\n    }\n  }\n  getPreliminaryCounter() {\n    if (this.direction === 'left') {\n      return this.counter + this.slideLength;\n    }\n    if (this.direction === 'right') {\n      return this.counter - this.slideLength;\n    }\n    return 0;\n  }\n  /*\r\n   * Limits the length of the slide during calls to the next() and prev()\r\n   * methods if the specified position is outside the cell length\r\n   */\n  limitSlideLength(slideLength) {\n    if (slideLength > 1) {\n      for (let i = 0; i < slideLength; i++) {\n        const newCounter = this.counter + (slideLength - i);\n        if (!this.isSlidesEnd(newCounter)) {\n          slideLength -= i;\n          this.isSlideLengthLimited = i > 0;\n          break;\n        }\n      }\n    }\n    return slideLength;\n  }\n  /* Offset the container to show the last cell completely */\n  getPositionCorrection(counter) {\n    let correction = 0;\n    const isLastSlide = this.isLastSlide(counter);\n    if (this.isSlideLengthLimited || isLastSlide) {\n      const cellsWidth = this.cells.cellLengthInLightDOMMode * this.fullCellWidth;\n      if (this.visibleWidth < cellsWidth) {\n        correction = -(this.numberOfVisibleCells * this.fullCellWidth - this.visibleWidth - this.margin);\n      }\n      if (correction >= -this.margin) {\n        correction = 0;\n      }\n    }\n    return correction;\n  }\n  getSlideLength(distanceAbs) {\n    let length = Math.floor(distanceAbs / this.fullCellWidth);\n    if (distanceAbs % this.fullCellWidth >= this.minSwipeDistance) {\n      length++;\n    }\n    return length;\n  }\n  getDistanceAbs() {\n    return Math.abs(this.initialPositionX - this.currentPositionX);\n  }\n  getDirection() {\n    const direction = Math.sign(this.initialPositionX - this.currentPositionX);\n    if (direction === -1) {\n      return 'right';\n    }\n    if (direction === 1) {\n      return 'left';\n    }\n    return undefined;\n  }\n  isSlidesEnd(counter) {\n    const margin = this.visibleCellsOverflowContainer ? 1 : 0;\n    const imageLength = this.cells.cellLength;\n    return imageLength - counter + margin < this.numberOfVisibleCells;\n  }\n  isLastSlide(counter) {\n    return this.isSlidesEnd(counter + 1);\n  }\n  setCounter() {\n    if (this.direction === 'left') {\n      this.counter += this.slideLength;\n    }\n    if (this.direction === 'right') {\n      this.counter -= this.slideLength;\n    }\n  }\n  getPositionByIndex(_counter) {\n    let correction = this.getPositionCorrection(this.counter + this.slideLength);\n    let position;\n    if (correction !== 0) {\n      correction += this.fullCellWidth;\n    }\n    if (this.direction === 'right') {\n      correction = 0;\n    }\n    position = -(_counter * this.fullCellWidth - correction);\n    position = this.provideSafePosition(position);\n    return position;\n  }\n  provideSafePosition(position) {\n    const endPosition = this.container.getEndPosition();\n    if (this.direction === 'left') {\n      if (position > 0) {\n        position = 0;\n      }\n    }\n    if (this.direction === 'right') {\n      if (position < endPosition) {\n        position = endPosition;\n      }\n    }\n    return position;\n  }\n  getPositionWithoutCorrection(value) {\n    const remainder = Math.round(value) % this.fullCellWidth;\n    if (remainder !== 0) {\n      return value - (this.fullCellWidth + remainder);\n    }\n    return value;\n  }\n  isNextArrowDisabled() {\n    return this.isLastSlide(this.counter) || !this.visibleCellsOverflowContainer && this.cellLength <= this.numberOfVisibleCells || this.visibleCellsOverflowContainer && this.cellLength < this.numberOfVisibleCells;\n  }\n  isPrevArrowDisabled() {\n    return this.counter === 0;\n  }\n  alignContainerFast() {\n    if (this.ifLeftDOMModeToBeginning(this.counter)) {\n      /* If we have already exited the light DOM mode but\r\n       * the cells are still out of place\r\n       */\n      if (this.cells.ifSequenceOfCellsIsChanged()) {\n        const positionX = -(this.counter * this.fullCellWidth);\n        this.container.transformPositionX(positionX, 0);\n        this.cells.setCounter(this.counter);\n        this.cells.lineUp();\n      }\n    }\n  }\n  ifLeftDOMModeToBeginning(counter) {\n    let flag;\n    if (counter <= this.overflowCellsLimit) {\n      flag = true;\n    }\n    if (this.counter <= this.overflowCellsLimit) {\n      flag = true;\n    }\n    return flag;\n  }\n  setVisibleWidth() {\n    this.visibleWidth = this.carouselProperties.visibleWidth || this.carouselProperties.hostElement.clientWidth;\n  }\n}\nclass Utils {\n  constructor(carouselProperties) {\n    this.carouselProperties = carouselProperties;\n  }\n  get margin() {\n    return this.carouselProperties.margin;\n  }\n  get overflowCellsLimit() {\n    return this.carouselProperties.overflowCellsLimit;\n  }\n  get numberOfVisibleCells() {\n    return Math.ceil(this.visibleWidth / this.fullCellWidth);\n  }\n  get visibleCellsOverflowContainer() {\n    return this.numberOfVisibleCells * this.fullCellWidth - this.margin > this.visibleWidth;\n  }\n  get fullCellWidth() {\n    return this.carouselProperties.cellWidth + this.carouselProperties.margin;\n  }\n  get visibleWidth() {\n    return this.carouselProperties.visibleWidth || this.carouselProperties.cellsElement.parentElement.clientWidth;\n  }\n  updateProperties(carouselProperties) {\n    this.carouselProperties = carouselProperties;\n  }\n  getStartX(event) {\n    const {\n      touches\n    } = event;\n    const carouselElementPosition = this.getCarouselElementPosition().left;\n    let startX;\n    if (touches) {\n      startX = touches[0].clientX - carouselElementPosition;\n    } else {\n      startX = event.clientX - carouselElementPosition;\n    }\n    return startX;\n  }\n  getMoveX(event) {\n    const {\n      touches\n    } = event;\n    const carouselElementPositionX = this.getCarouselElementPosition().left;\n    if (touches) {\n      return touches[0].clientX - carouselElementPositionX;\n    }\n    return event.clientX - carouselElementPositionX;\n  }\n  getCarouselElementPosition() {\n    return this.carouselProperties.hostElement.getBoundingClientRect();\n  }\n}\nclass CarouselComponent {\n  constructor(elementRef, ref) {\n    this.elementRef = elementRef;\n    this.ref = ref;\n    this._isCounter = false;\n    this._cellWidth = 200;\n    this.isMoving = false;\n    this.isNgContent = false;\n    this.events = new EventEmitter();\n    this.height = 450;\n    this.autoplay = true;\n    this.autoplayInterval = 5000;\n    this.pauseOnHover = true;\n    this.dots = false;\n    this.margin = 10;\n    this.objectFit = 'cover';\n    this.minSwipeDistance = 10;\n    this.transitionDuration = 200;\n    this.transitionTimingFunction = 'ease-out';\n    this.counterSeparator = ' / ';\n    this.overflowCellsLimit = 3;\n    this.listeners = 'mouse and touch';\n    this.cellsToShow = 1;\n    this.cellsToScroll = 1;\n    this.freeScroll = false;\n    this.arrows = true;\n    this.arrowsOutside = false;\n    this.arrowsTheme = 'light';\n    this.hostClassCarousel = true;\n    this.handleTouchstart = event => {\n      this.touches.addEventListeners('mousemove', 'handleMousemove');\n      this.carousel.handleTouchstart(event);\n      this.isMoving = true;\n    };\n    this.handleHorizontalSwipe = event => {\n      event.preventDefault();\n      this.carousel.handleHorizontalSwipe(event);\n    };\n    this.handleTouchend = event => {\n      const {\n        touches\n      } = event;\n      this.carousel.handleTouchend(event);\n      this.touches.removeEventListeners('mousemove', 'handleMousemove');\n      this.isMoving = false;\n    };\n    this.handleTap = event => {\n      const outboundEvent = {\n        name: 'click'\n      };\n      const nodes = Array.prototype.slice.call(this.cellsElement.children);\n      const cellElement = event.srcElement.closest('.carousel-cell');\n      const i = nodes.indexOf(cellElement);\n      const cellIndex = nodes.indexOf(cellElement);\n      outboundEvent.cellIndex = cellIndex;\n    };\n  }\n  get slideCounter() {\n    if (this.carousel) {\n      return this.carousel.slideCounter;\n    }\n  }\n  get lapCounter() {\n    if (this.carousel) {\n      return this.carousel.lapCounter;\n    }\n  }\n  get isLandscape() {\n    return window.innerWidth > window.innerHeight;\n  }\n  get isSafari() {\n    const ua = navigator.userAgent.toLowerCase();\n    if (ua.indexOf('safari') !== -1) {\n      return !(ua.indexOf('chrome') > -1);\n    }\n  }\n  get counter() {\n    const counter = this.slideCounter;\n    return counter + 1 + this.counterSeparator + this.cellLength;\n  }\n  get cellsElement() {\n    return this.elementRef.nativeElement.querySelector('.carousel-cells');\n  }\n  get isArrows() {\n    return this.arrows && !this.freeScroll;\n  }\n  get isCounter() {\n    return this._isCounter && this.cellLength > 1;\n  }\n  get activeDotIndex() {\n    return this.slideCounter % this.cellLength;\n  }\n  get cellLimit() {\n    if (this.carousel) {\n      return this.carousel.cellLimit;\n    }\n  }\n  get carouselWidth() {\n    return this.elementRef.nativeElement.clientWidth;\n  }\n  set cellWidth(value) {\n    if (value) {\n      this._cellWidth = value;\n    }\n  }\n  set isCounter(value) {\n    if (value) {\n      this._isCounter = value;\n    }\n  }\n  onWindowResize(event) {\n    if (this.utils.visibleWidth !== this.savedCarouselWidth) {\n      this.resize();\n    }\n  }\n  onMouseEnter() {\n    if (this.autoplay && this.pauseOnHover) {\n      this.carouselProperties.autoplayIsPossible = false;\n      this.carousel.stopAutoplay();\n    }\n  }\n  onMouseLeave() {\n    if (this.autoplay && this.pauseOnHover) {\n      this.carouselProperties.autoplayIsPossible = true;\n      this.carousel.autoplay();\n    }\n  }\n  onDragStart() {\n    return false;\n  }\n  ngOnInit() {\n    this.isNgContent = this.cellsElement.children.length > 0;\n    this.touches = new Touches({\n      element: this.cellsElement,\n      listeners: this.listeners,\n      mouseListeners: {\n        mousedown: 'handleMousedown',\n        mouseup: 'handleMouseup'\n      }\n    });\n    this.touches.on('touchstart', this.handleTouchstart);\n    this.touches.on('horizontal-swipe', this.handleHorizontalSwipe);\n    this.touches.on('touchend', this.handleTouchend);\n    this.touches.on('mousedown', this.handleTouchstart);\n    this.touches.on('mouseup', this.handleTouchend);\n    this.touches.on('tap', this.handleTap);\n    this.setDimensions();\n  }\n  ngAfterViewInit() {\n    this.initCarousel();\n    this.cellLength = this.getCellLength();\n    this.dotsArr = Array(this.cellLength).fill(1);\n    this.ref.detectChanges();\n    this.carousel.lineUpCells();\n    this.savedCarouselWidth = this.carouselWidth;\n    /* Start detecting changes in the DOM tree */\n    this.detectDomChanges();\n  }\n  ngOnChanges(changes) {\n    const isFirstChange = Object.values(changes).some(change => change.isFirstChange());\n    if (!isFirstChange && (changes.width || changes.height)) {\n      this.setDimensions();\n      this.initCarousel();\n      this.carousel.lineUpCells();\n      this.ref.detectChanges();\n    }\n  }\n  ngOnDestroy() {\n    this.touches.destroy();\n    // this.carousel.destroy();\n  }\n\n  initCarousel() {\n    this.carouselProperties = {\n      id: this.id,\n      cellsElement: this.elementRef.nativeElement.querySelector('.carousel-cells'),\n      hostElement: this.elementRef.nativeElement,\n      cellWidth: this.getCellWidth(),\n      autoplayInterval: this.autoplayInterval,\n      autoplayIsPossible: true,\n      overflowCellsLimit: this.overflowCellsLimit,\n      visibleWidth: this.width,\n      margin: this.margin,\n      minSwipeDistance: this.minSwipeDistance,\n      transitionDuration: this.transitionDuration,\n      transitionTimingFunction: this.transitionTimingFunction,\n      videoProperties: this.videoProperties,\n      eventHandler: this.events,\n      freeScroll: this.freeScroll\n    };\n    this.utils = new Utils(this.carouselProperties);\n    this.cells = new Cells(this.carouselProperties, this.utils);\n    this.container = new Container(this.carouselProperties, this.utils, this.cells);\n    this.slide = new Slide(this.carouselProperties, this.utils, this.cells, this.container);\n    if (this.autoplay && this.carousel) {\n      this.carousel.stopAutoplay();\n    }\n    this.carousel = new Carousel(this.carouselProperties, this.utils, this.cells, this.container, this.slide);\n    if (this.autoplay) {\n      this.carousel.autoplay();\n    }\n  }\n  resize() {\n    this.landscapeMode = this.isLandscape;\n    this.savedCarouselWidth = this.carouselWidth;\n    this.carouselProperties.cellWidth = this.getCellWidth();\n    this.cells.updateProperties(this.carouselProperties);\n    this.carousel.updateProperties(this.carouselProperties);\n    this.container.updateProperties(this.carouselProperties);\n    this.slide.updateProperties(this.carouselProperties);\n    this.utils.updateProperties(this.carouselProperties);\n    this.carousel.lineUpCells();\n    this.slide.select(0);\n    this.ref.detectChanges();\n  }\n  detectDomChanges() {\n    const observer = new MutationObserver(mutations => {\n      this.onDomChanges();\n    });\n    const config = {\n      attributes: true,\n      childList: true,\n      characterData: true\n    };\n    observer.observe(this.cellsElement, config);\n  }\n  onDomChanges() {\n    this.cellLength = this.getCellLength();\n    this.carousel.lineUpCells();\n    this.ref.detectChanges();\n  }\n  setDimensions() {\n    this.hostStyleHeight = `${this.height}px`;\n    this.hostStyleWidth = `${this.width}px`;\n  }\n  handleTransitionendCellContainer(event) {\n    if (event.target.className === 'carousel-cells') {\n      this.carousel.handleTransitionend();\n    }\n  }\n  getCellWidth() {\n    const elementWidth = this.carouselWidth;\n    if (this.cellsToShow) {\n      const margin = this.cellsToShow > 1 ? this.margin : 0;\n      const totalMargin = margin * (this.cellsToShow - 1);\n      return (elementWidth - totalMargin) / this.cellsToShow;\n    }\n    if (this._cellWidth === '100%') {\n      return elementWidth;\n    }\n    return this._cellWidth;\n  }\n  next() {\n    this.carousel.next(this.cellsToScroll);\n    this.carousel.stopAutoplay();\n  }\n  prev() {\n    this.carousel.prev(this.cellsToScroll);\n    this.carousel.stopAutoplay();\n  }\n  isNextArrowDisabled() {\n    if (this.carousel) {\n      return this.carousel.isNextArrowDisabled();\n    }\n  }\n  isPrevArrowDisabled() {\n    if (this.carousel) {\n      return this.carousel.isPrevArrowDisabled();\n    }\n  }\n  getCellLength() {\n    return this.cellsElement.children.length;\n  }\n}\nCarouselComponent.ɵfac = function CarouselComponent_Factory(t) {\n  return new (t || CarouselComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nCarouselComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CarouselComponent,\n  selectors: [[\"carousel\"], [\"\", \"carousel\", \"\"]],\n  hostVars: 6,\n  hostBindings: function CarouselComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function CarouselComponent_resize_HostBindingHandler($event) {\n        return ctx.onWindowResize($event);\n      }, false, i0.ɵɵresolveWindow)(\"mouseenter\", function CarouselComponent_mouseenter_HostBindingHandler($event) {\n        return ctx.onMouseEnter($event);\n      })(\"mouseleave\", function CarouselComponent_mouseleave_HostBindingHandler($event) {\n        return ctx.onMouseLeave($event);\n      })(\"dragstart\", function CarouselComponent_dragstart_HostBindingHandler($event) {\n        return ctx.onDragStart($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"height\", ctx.hostStyleHeight)(\"width\", ctx.hostStyleWidth);\n      i0.ɵɵclassProp(\"carousel\", ctx.hostClassCarousel);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    height: \"height\",\n    width: \"width\",\n    autoplay: \"autoplay\",\n    autoplayInterval: \"autoplayInterval\",\n    pauseOnHover: \"pauseOnHover\",\n    dots: \"dots\",\n    borderRadius: \"borderRadius\",\n    margin: \"margin\",\n    objectFit: \"objectFit\",\n    minSwipeDistance: \"minSwipeDistance\",\n    transitionDuration: \"transitionDuration\",\n    transitionTimingFunction: \"transitionTimingFunction\",\n    videoProperties: \"videoProperties\",\n    counterSeparator: \"counterSeparator\",\n    overflowCellsLimit: \"overflowCellsLimit\",\n    listeners: \"listeners\",\n    cellsToShow: \"cellsToShow\",\n    cellsToScroll: \"cellsToScroll\",\n    freeScroll: \"freeScroll\",\n    arrows: \"arrows\",\n    arrowsOutside: \"arrowsOutside\",\n    arrowsTheme: \"arrowsTheme\",\n    cellWidth: \"cellWidth\",\n    isCounter: [\"counter\", \"isCounter\"]\n  },\n  outputs: {\n    events: \"events\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 7,\n  vars: 5,\n  consts: [[\"class\", \"carousel-counter\", 4, \"ngIf\"], [1, \"carousel-container\"], [1, \"carousel-cells\", 3, \"transitionend\"], [\"cells\", \"\"], [\"class\", \"carousel-dots\", 4, \"ngIf\"], [\"class\", \"carousel-arrows\", 3, \"carousel-arrows-outside\", \"carousel-dark-arrows\", 4, \"ngIf\"], [1, \"carousel-counter\"], [1, \"carousel-dots\"], [\"class\", \"carousel-dot\", 3, \"carousel-dot-active\", 4, \"ngFor\", \"ngForOf\"], [1, \"carousel-dot\"], [1, \"carousel-arrows\"], [1, \"carousel-arrow\", \"carousel-arrow-prev\", 3, \"click\"], [1, \"carousel-arrow\", \"carousel-arrow-next\", 3, \"click\"]],\n  template: function CarouselComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, CarouselComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2, 3);\n      i0.ɵɵlistener(\"transitionend\", function CarouselComponent_Template_div_transitionend_2_listener($event) {\n        return ctx.handleTransitionendCellContainer($event);\n      });\n      i0.ɵɵprojection(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, CarouselComponent_div_5_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, CarouselComponent_div_6_Template, 3, 8, \"div\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isCounter);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"carousel-moving\", ctx.isMoving);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.dots);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isArrows);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  styles: [\"[_nghost-%COMP%]{-webkit-user-select:none;user-select:none;position:relative;z-index:10000;top:0;left:0;transform-origin:top left;display:block;box-sizing:border-box;width:100%;height:100%}[_nghost-%COMP%]   .carousel-container[_ngcontent-%COMP%]{cursor:grab;overflow:hidden;width:100%;height:100%}[_nghost-%COMP%]   .carousel-container.carousel-moving[_ngcontent-%COMP%]{cursor:grabbing}[_nghost-%COMP%]   .carousel-counter[_ngcontent-%COMP%]{position:absolute;z-index:30;top:8px;right:24px;padding:5px 7px;font-size:11px;line-height:initial;color:#fff;text-align:right;background-color:#1725444d;border-radius:13px;transition:opacity .2s}[_nghost-%COMP%]     .carousel-cells{will-change:transform;display:block;width:100%;height:100%;transition:transform .2s}[_nghost-%COMP%]     .carousel-cells .carousel-cell{position:absolute;overflow:hidden;width:100%;height:100%}[_nghost-%COMP%]     .carousel-cells .carousel-cell img, [_nghost-%COMP%]     .carousel-cells .carousel-cell video{position:relative;width:100%;height:100%;object-fit:contain}[_nghost-%COMP%]     .carousel-cells .carousel-cell img.swiper-hide{display:none}[_nghost-%COMP%]     .carousel-cells .carousel-cell .carousel-play{position:absolute;z-index:1;inset:0}[_nghost-%COMP%]   .carousel-arrow[_ngcontent-%COMP%]{cursor:pointer;position:absolute;z-index:10;top:50%;display:inline-block;width:20px;height:20px;margin-top:-10px;opacity:0;border:solid rgba(255,255,255,.6);border-width:0 4px 4px 0;border-radius:2px;transition:opacity .1s ease-in-out}[_nghost-%COMP%]   .carousel-arrow[_ngcontent-%COMP%]:before{content:\\\" \\\";position:absolute;top:-50px;left:-50px;display:inline-block;width:100px;height:100px;border:0}[_nghost-%COMP%]   .carousel-arrow[_ngcontent-%COMP%]:hover{opacity:.5}[_nghost-%COMP%]   .carousel-arrow-prev[_ngcontent-%COMP%]{left:35px;transform:rotate(135deg)}[_nghost-%COMP%]   .carousel-arrow-next[_ngcontent-%COMP%]{right:35px;transform:rotate(-45deg)}[_nghost-%COMP%]   .carousel-arrows-outside[_ngcontent-%COMP%]   .carousel-arrow-prev[_ngcontent-%COMP%]{left:-60px}[_nghost-%COMP%]   .carousel-arrows-outside[_ngcontent-%COMP%]   .carousel-arrow-next[_ngcontent-%COMP%]{right:-60px}[_nghost-%COMP%]   .carousel-dark-arrows[_ngcontent-%COMP%]   .carousel-arrow[_ngcontent-%COMP%]{filter:invert(1)}[_nghost-%COMP%]   .carousel-arrow-disabled[_ngcontent-%COMP%]{display:none}[_nghost-%COMP%]   .carousel-dots[_ngcontent-%COMP%]{position:absolute;z-index:10;right:0;bottom:0;left:0;text-align:center}[_nghost-%COMP%]   .carousel-dots[_ngcontent-%COMP%]   .carousel-dot[_ngcontent-%COMP%]{display:inline-block;width:8px;height:8px;margin:4px;border:2px solid #fff;border-radius:100px}[_nghost-%COMP%]   .carousel-dots[_ngcontent-%COMP%]   .carousel-dot-active[_ngcontent-%COMP%]{background-color:#fff}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CarouselComponent, [{\n    type: Component,\n    args: [{\n      selector: 'carousel, [carousel]',\n      template: \"<div class=\\\"carousel-counter\\\" *ngIf=\\\"isCounter\\\">{{counter}}</div>\\r\\n\\r\\n<div class=\\\"carousel-container\\\" [class.carousel-moving]=\\\"isMoving\\\">\\r\\n\\t<div class=\\\"carousel-cells\\\" #cells (transitionend)=\\\"handleTransitionendCellContainer($event)\\\">\\r\\n\\t\\t<ng-content></ng-content>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"carousel-dots\\\" *ngIf=\\\"dots\\\">\\r\\n\\t\\t<div class=\\\"carousel-dot\\\" [class.carousel-dot-active]=\\\"i === activeDotIndex\\\" *ngFor=\\\"let dot of dotsArr; index as i\\\"></div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"carousel-arrows\\\"\\r\\n\\t[class.carousel-arrows-outside]=\\\"arrowsOutside\\\"\\r\\n\\t[class.carousel-dark-arrows]=\\\"arrowsTheme === 'dark'\\\"\\r\\n\\t*ngIf=\\\"isArrows\\\">\\r\\n\\r\\n\\t<div class=\\\"carousel-arrow carousel-arrow-prev\\\" [class.carousel-arrow-disabled]=\\\"isPrevArrowDisabled()\\\" (click)=\\\"prev()\\\"></div>\\r\\n\\t<div class=\\\"carousel-arrow carousel-arrow-next\\\" [class.carousel-arrow-disabled]=\\\"isNextArrowDisabled()\\\" (click)=\\\"next()\\\"></div>\\r\\n</div>\\r\\n\",\n      styles: [\":host{-webkit-user-select:none;user-select:none;position:relative;z-index:10000;top:0;left:0;transform-origin:top left;display:block;box-sizing:border-box;width:100%;height:100%}:host .carousel-container{cursor:grab;overflow:hidden;width:100%;height:100%}:host .carousel-container.carousel-moving{cursor:grabbing}:host .carousel-counter{position:absolute;z-index:30;top:8px;right:24px;padding:5px 7px;font-size:11px;line-height:initial;color:#fff;text-align:right;background-color:#1725444d;border-radius:13px;transition:opacity .2s}:host ::ng-deep .carousel-cells{will-change:transform;display:block;width:100%;height:100%;transition:transform .2s}:host ::ng-deep .carousel-cells .carousel-cell{position:absolute;overflow:hidden;width:100%;height:100%}:host ::ng-deep .carousel-cells .carousel-cell img,:host ::ng-deep .carousel-cells .carousel-cell video{position:relative;width:100%;height:100%;object-fit:contain}:host ::ng-deep .carousel-cells .carousel-cell img.swiper-hide{display:none}:host ::ng-deep .carousel-cells .carousel-cell .carousel-play{position:absolute;z-index:1;inset:0}:host .carousel-arrow{cursor:pointer;position:absolute;z-index:10;top:50%;display:inline-block;width:20px;height:20px;margin-top:-10px;opacity:0;border:solid rgba(255,255,255,.6);border-width:0 4px 4px 0;border-radius:2px;transition:opacity .1s ease-in-out}:host .carousel-arrow:before{content:\\\" \\\";position:absolute;top:-50px;left:-50px;display:inline-block;width:100px;height:100px;border:0}:host .carousel-arrow:hover{opacity:.5}:host .carousel-arrow-prev{left:35px;transform:rotate(135deg)}:host .carousel-arrow-next{right:35px;transform:rotate(-45deg)}:host .carousel-arrows-outside .carousel-arrow-prev{left:-60px}:host .carousel-arrows-outside .carousel-arrow-next{right:-60px}:host .carousel-dark-arrows .carousel-arrow{filter:invert(1)}:host .carousel-arrow-disabled{display:none}:host .carousel-dots{position:absolute;z-index:10;right:0;bottom:0;left:0;text-align:center}:host .carousel-dots .carousel-dot{display:inline-block;width:8px;height:8px;margin:4px;border:2px solid #fff;border-radius:100px}:host .carousel-dots .carousel-dot-active{background-color:#fff}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    events: [{\n      type: Output\n    }],\n    id: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    autoplay: [{\n      type: Input\n    }],\n    autoplayInterval: [{\n      type: Input\n    }],\n    pauseOnHover: [{\n      type: Input\n    }],\n    dots: [{\n      type: Input\n    }],\n    borderRadius: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }],\n    objectFit: [{\n      type: Input\n    }],\n    minSwipeDistance: [{\n      type: Input\n    }],\n    transitionDuration: [{\n      type: Input\n    }],\n    transitionTimingFunction: [{\n      type: Input\n    }],\n    videoProperties: [{\n      type: Input\n    }],\n    counterSeparator: [{\n      type: Input\n    }],\n    overflowCellsLimit: [{\n      type: Input\n    }],\n    listeners: [{\n      type: Input\n    }],\n    cellsToShow: [{\n      type: Input\n    }],\n    cellsToScroll: [{\n      type: Input\n    }],\n    freeScroll: [{\n      type: Input\n    }],\n    arrows: [{\n      type: Input\n    }],\n    arrowsOutside: [{\n      type: Input\n    }],\n    arrowsTheme: [{\n      type: Input\n    }],\n    cellWidth: [{\n      type: Input,\n      args: ['cellWidth']\n    }],\n    isCounter: [{\n      type: Input,\n      args: ['counter']\n    }],\n    hostClassCarousel: [{\n      type: HostBinding,\n      args: ['class.carousel']\n    }],\n    hostStyleHeight: [{\n      type: HostBinding,\n      args: ['style.height']\n    }],\n    hostStyleWidth: [{\n      type: HostBinding,\n      args: ['style.width']\n    }],\n    onWindowResize: [{\n      type: HostListener,\n      args: ['window:resize', ['$event']]\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter', ['$event']]\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave', ['$event']]\n    }],\n    onDragStart: [{\n      type: HostListener,\n      args: ['dragstart', ['$event']]\n    }]\n  });\n})();\nclass IvyCarouselModule {}\nIvyCarouselModule.ɵfac = function IvyCarouselModule_Factory(t) {\n  return new (t || IvyCarouselModule)();\n};\nIvyCarouselModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: IvyCarouselModule\n});\nIvyCarouselModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IvyCarouselModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [CarouselComponent],\n      imports: [CommonModule],\n      exports: [CarouselComponent],\n      providers: [],\n      bootstrap: [],\n      entryComponents: [CarouselComponent]\n    }]\n  }], null, null);\n})();\n\n/*\r\n * Public API Surface of carousel-angular\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CarouselComponent, IvyCarouselModule };","map":{"version":3,"names":["i0","EventEmitter","Component","Output","Input","HostBinding","HostListener","NgModule","i1","CommonModule","Touches","constructor","properties","eventType","undefined","handlers","startX","startY","lastTap","doubleTapMinTimeout","tapMinTimeout","touchstartTime","i","isMousedown","_touchListeners","touchstart","touchmove","touchend","_mouseListeners","mousedown","mousemove","mouseup","wheel","_otherListeners","resize","handleTouchstart","event","elementPosition","getElementPosition","Date","getTime","getTouchstartPosition","runHandler","handleTouchmove","touches","detectPan","detectPinch","detectLinearSwipe","swipeType","handleLinearSwipe","handleTouchend","detectDoubleTap","detectTap","length","handleMousedown","getMousedownPosition","handleMousemove","handleMouseup","handleWheel","handleResize","element","toggleEventListeners","touchListeners","mouseListeners","otherListeners","destroy","action","listeners","Object","assign","detectTouchScreen","listener","handler","window","addEventListener","removeEventListener","document","passive","addEventListeners","removeEventListeners","getLinearSwipeType","eventName","response","currentTime","tapLength","clearTimeout","doubleTapTimeout","setTimeout","movementX","Math","abs","moveLeft","movementY","moveTop","getBoundingClientRect","clientX","left","clientY","top","index","prefixes","split","mq","query","matchMedia","matches","join","on","Carousel","utils","cells","container","slide","autoplayId","handleHorizontalSwipe","freeScroll","isNextArrowDisabled","isPrevArrowDisabled","init","cellLength","lastCellIndex","overflowCellsLimit","autoplayIsPossible","margin","minSwipeDistance","transitionDuration","transitionTimingFunction","fullCellWidth","cellWidth","numberOfVisibleCells","slideCounter","counter","updateProperties","cellsElement","visibleWidth","parentElement","clientWidth","clearInterval","lineUpCells","lineUp","handleTransitionend","next","prev","autoplay","setInterval","autoplayInterval","stopAutoplay","Container","carouselProperties","initialPositionX","initialElementPositionX","pullLimit","startTime","moveX","isSwipeInProgress","tooFewCells","disabled","setWidth","getStartX","getInitialElementPositionX","getMoveX","move","simpleProcessing","finishMoving","clearInitialValues","positionX","getMovePositionX","isPulled","detectPulled","direction","getDirection","edge","slowdownOnPull","transformPositionX","overflowX","distance","getDistance","currentPositionX","getCurrentPositionX","getEndPosition","_positionX","endPosition","decelerationRatio","rubberPositionX","containerWidth","getWidth","newPositionX","getInertia","getAlignedPositionOnPull","setInitialPosition","inertia","parentPosition","position","width","value","duration","style","transition","transform","carouselElementPosition","getCarouselElementPosition","sign","Cells","cellLengthInLightDOMMode","children","cell","getCellPositionInContainer","ifSequenceOfCellsIsChanged","cellIndexInDOMTree","setCounter","Slide","slideLength","isSlideInProgress","_counter","distanceAbs","isNotClickOnArrow","isSlideLengthLimited","visibleCellsOverflowContainer","fixedContainerPosition","setVisibleWidth","hostElement","handleSlide","customSlideLength","isUsingButton","limitSlideLength","getSlideLength","getPreliminaryCounter","isSlidesEnd","getPositionByIndex","select","newCounter","getPositionCorrection","correction","isLastSlide","cellsWidth","floor","getDistanceAbs","imageLength","provideSafePosition","getPositionWithoutCorrection","remainder","round","alignContainerFast","ifLeftDOMModeToBeginning","flag","Utils","ceil","carouselElementPositionX","CarouselComponent","elementRef","ref","_isCounter","_cellWidth","isMoving","isNgContent","events","height","pauseOnHover","dots","objectFit","counterSeparator","cellsToShow","cellsToScroll","arrows","arrowsOutside","arrowsTheme","hostClassCarousel","carousel","preventDefault","handleTap","outboundEvent","name","nodes","Array","prototype","slice","call","cellElement","srcElement","closest","indexOf","cellIndex","lapCounter","isLandscape","innerWidth","innerHeight","isSafari","ua","navigator","userAgent","toLowerCase","nativeElement","querySelector","isArrows","isCounter","activeDotIndex","cellLimit","carouselWidth","onWindowResize","savedCarouselWidth","onMouseEnter","onMouseLeave","onDragStart","ngOnInit","setDimensions","ngAfterViewInit","initCarousel","getCellLength","dotsArr","fill","detectChanges","detectDomChanges","ngOnChanges","changes","isFirstChange","values","some","change","ngOnDestroy","id","getCellWidth","videoProperties","eventHandler","landscapeMode","observer","MutationObserver","mutations","onDomChanges","config","attributes","childList","characterData","observe","hostStyleHeight","hostStyleWidth","handleTransitionendCellContainer","target","className","elementWidth","totalMargin","ɵfac","ElementRef","ChangeDetectorRef","ɵcmp","NgForOf","NgIf","type","args","selector","template","styles","borderRadius","IvyCarouselModule","ɵmod","ɵinj","declarations","imports","exports","providers","bootstrap","entryComponents"],"sources":["C:/Users/HP/portefolio/node_modules/carousel-angular/fesm2020/carousel-angular.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Output, Input, HostBinding, HostListener, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass Touches {\r\n    constructor(properties) {\r\n        this.eventType = undefined;\r\n        this.handlers = {};\r\n        this.startX = 0;\r\n        this.startY = 0;\r\n        this.lastTap = 0;\r\n        this.doubleTapMinTimeout = 300;\r\n        this.tapMinTimeout = 200;\r\n        this.touchstartTime = 0;\r\n        this.i = 0;\r\n        this.isMousedown = false;\r\n        this._touchListeners = {\r\n            touchstart: 'handleTouchstart',\r\n            touchmove: 'handleTouchmove',\r\n            touchend: 'handleTouchend'\r\n        };\r\n        this._mouseListeners = {\r\n            mousedown: 'handleMousedown',\r\n            mousemove: 'handleMousemove',\r\n            mouseup: 'handleMouseup',\r\n            wheel: 'handleWheel'\r\n        };\r\n        this._otherListeners = {\r\n            resize: 'handleResize'\r\n        };\r\n        /*\r\n         * Listeners\r\n         */\r\n        /* Touchstart */\r\n        this.handleTouchstart = (event) => {\r\n            this.elementPosition = this.getElementPosition();\r\n            this.touchstartTime = new Date().getTime();\r\n            if (this.eventType === undefined) {\r\n                this.getTouchstartPosition(event);\r\n            }\r\n            this.runHandler('touchstart', event);\r\n        };\r\n        /* Touchmove */\r\n        this.handleTouchmove = (event) => {\r\n            const { touches } = event;\r\n            // Pan\r\n            if (this.detectPan(touches)) {\r\n                this.runHandler('pan', event);\r\n            }\r\n            // Pinch\r\n            if (this.detectPinch(event)) {\r\n                this.runHandler('pinch', event);\r\n            }\r\n            // Linear swipe\r\n            switch (this.detectLinearSwipe(event)) {\r\n                case 'horizontal-swipe':\r\n                    event.swipeType = 'horizontal-swipe';\r\n                    this.runHandler('horizontal-swipe', event);\r\n                    break;\r\n                case 'vertical-swipe':\r\n                    event.swipeType = 'vertical-swipe';\r\n                    this.runHandler('vertical-swipe', event);\r\n                    break;\r\n            }\r\n            // Linear swipe\r\n            if (this.detectLinearSwipe(event) ||\r\n                this.eventType === 'horizontal-swipe' ||\r\n                this.eventType === 'vertical-swipe') {\r\n                this.handleLinearSwipe(event);\r\n            }\r\n        };\r\n        /* Touchend */\r\n        this.handleTouchend = (event) => {\r\n            const { touches } = event;\r\n            // Double Tap\r\n            if (this.detectDoubleTap()) {\r\n                this.runHandler('double-tap', event);\r\n            }\r\n            // Tap\r\n            this.detectTap();\r\n            this.runHandler('touchend', event);\r\n            this.eventType = 'touchend';\r\n            if (touches && touches.length === 0) {\r\n                this.eventType = undefined;\r\n                this.i = 0;\r\n            }\r\n        };\r\n        /* Mousedown */\r\n        this.handleMousedown = (event) => {\r\n            this.isMousedown = true;\r\n            this.elementPosition = this.getElementPosition();\r\n            this.touchstartTime = new Date().getTime();\r\n            if (this.eventType === undefined) {\r\n                this.getMousedownPosition(event);\r\n            }\r\n            this.runHandler('mousedown', event);\r\n        };\r\n        /* Mousemove */\r\n        this.handleMousemove = (event) => {\r\n            // event.preventDefault();\r\n            if (!this.isMousedown) {\r\n                return;\r\n            }\r\n            // Pan\r\n            this.runHandler('pan', event);\r\n            // Linear swipe\r\n            switch (this.detectLinearSwipe(event)) {\r\n                case 'horizontal-swipe':\r\n                    event.swipeType = 'horizontal-swipe';\r\n                    this.runHandler('horizontal-swipe', event);\r\n                    break;\r\n                case 'vertical-swipe':\r\n                    event.swipeType = 'vertical-swipe';\r\n                    this.runHandler('vertical-swipe', event);\r\n                    break;\r\n            }\r\n            // Linear swipe\r\n            if (this.detectLinearSwipe(event) ||\r\n                this.eventType === 'horizontal-swipe' ||\r\n                this.eventType === 'vertical-swipe') {\r\n                this.handleLinearSwipe(event);\r\n            }\r\n        };\r\n        /* Mouseup */\r\n        this.handleMouseup = (event) => {\r\n            // Tap\r\n            this.detectTap();\r\n            this.isMousedown = false;\r\n            this.runHandler('mouseup', event);\r\n            this.eventType = undefined;\r\n            this.i = 0;\r\n        };\r\n        /* Wheel */\r\n        this.handleWheel = (event) => {\r\n            this.runHandler('wheel', event);\r\n        };\r\n        /* Resize */\r\n        this.handleResize = (event) => {\r\n            this.runHandler('resize', event);\r\n        };\r\n        this.properties = properties;\r\n        this.element = this.properties.element;\r\n        this.elementPosition = this.getElementPosition();\r\n        this.toggleEventListeners('addEventListener');\r\n    }\r\n    get touchListeners() {\r\n        return this.properties.touchListeners\r\n            ? this.properties.touchListeners\r\n            : this._touchListeners;\r\n    }\r\n    get mouseListeners() {\r\n        return this.properties.mouseListeners\r\n            ? this.properties.mouseListeners\r\n            : this._mouseListeners;\r\n    }\r\n    get otherListeners() {\r\n        return this.properties.otherListeners\r\n            ? this.properties.otherListeners\r\n            : this._otherListeners;\r\n    }\r\n    destroy() {\r\n        this.toggleEventListeners('removeEventListener');\r\n    }\r\n    toggleEventListeners(action) {\r\n        let listeners;\r\n        if (this.properties.listeners === 'mouse and touch') {\r\n            listeners = Object.assign(this.touchListeners, this.mouseListeners);\r\n        }\r\n        else {\r\n            listeners = this.detectTouchScreen()\r\n                ? this.touchListeners\r\n                : this.mouseListeners;\r\n        }\r\n        if (this.properties.resize) {\r\n            listeners = Object.assign(listeners, this.otherListeners);\r\n        }\r\n        for (const listener in listeners) {\r\n            const handler = listeners[listener];\r\n            // Window\r\n            if (listener === 'resize') {\r\n                if (action === 'addEventListener') {\r\n                    window.addEventListener(listener, this[handler], false);\r\n                }\r\n                if (action === 'removeEventListener') {\r\n                    window.removeEventListener(listener, this[handler], false);\r\n                }\r\n                // Document\r\n            }\r\n            else if (listener === 'mouseup' || listener === 'mousemove') {\r\n                if (action === 'addEventListener') {\r\n                    document.addEventListener(listener, this[handler], {\r\n                        passive: false\r\n                    });\r\n                }\r\n                if (action === 'removeEventListener') {\r\n                    document.removeEventListener(listener, this[handler], false);\r\n                }\r\n                // Element\r\n            }\r\n            else {\r\n                if (action === 'addEventListener') {\r\n                    this.element.addEventListener(listener, this[handler], false);\r\n                }\r\n                if (action === 'removeEventListener') {\r\n                    this.element.removeEventListener(listener, this[handler], false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    addEventListeners(listener) {\r\n        const handler = this._mouseListeners[listener];\r\n        window.addEventListener(listener, this[handler], false);\r\n    }\r\n    removeEventListeners(listener) {\r\n        const handler = this._mouseListeners[listener];\r\n        window.removeEventListener(listener, this[handler], false);\r\n    }\r\n    handleLinearSwipe(event) {\r\n        // event.preventDefault();\r\n        this.i++;\r\n        if (this.i > 3) {\r\n            this.eventType = this.getLinearSwipeType(event);\r\n        }\r\n        if (this.eventType === 'horizontal-swipe') {\r\n            this.runHandler('horizontal-swipe', event);\r\n        }\r\n        if (this.eventType === 'vertical-swipe') {\r\n            this.runHandler('vertical-swipe', event);\r\n        }\r\n    }\r\n    runHandler(eventName, response) {\r\n        if (this.handlers[eventName]) {\r\n            this.handlers[eventName](response);\r\n        }\r\n    }\r\n    /*\r\n     * Detection\r\n     */\r\n    detectPan(touches) {\r\n        return ((touches.length === 1 && !this.eventType) || this.eventType === 'pan');\r\n    }\r\n    detectDoubleTap() {\r\n        if (this.eventType != undefined) {\r\n            return;\r\n        }\r\n        const currentTime = new Date().getTime();\r\n        const tapLength = currentTime - this.lastTap;\r\n        clearTimeout(this.doubleTapTimeout);\r\n        if (tapLength < this.doubleTapMinTimeout && tapLength > 0) {\r\n            return true;\r\n        }\r\n        this.doubleTapTimeout = setTimeout(() => {\r\n            clearTimeout(this.doubleTapTimeout);\r\n        }, this.doubleTapMinTimeout);\r\n        this.lastTap = currentTime;\r\n        return undefined;\r\n    }\r\n    detectTap() {\r\n        if (this.eventType != undefined) {\r\n            return;\r\n        }\r\n        const currentTime = new Date().getTime();\r\n        const tapLength = currentTime - this.touchstartTime;\r\n        if (tapLength > 0) {\r\n            if (tapLength < this.tapMinTimeout) {\r\n                this.runHandler('tap', event);\r\n            }\r\n            else {\r\n                this.runHandler('longtap', event);\r\n            }\r\n        }\r\n    }\r\n    detectPinch(event) {\r\n        const { touches } = event;\r\n        return ((touches.length === 2 && this.eventType === undefined) ||\r\n            this.eventType === 'pinch');\r\n    }\r\n    detectLinearSwipe(event) {\r\n        const { touches } = event;\r\n        if (touches) {\r\n            if ((touches.length === 1 && !this.eventType) ||\r\n                this.eventType === 'horizontal-swipe' ||\r\n                this.eventType === 'vertical-swipe') {\r\n                return this.getLinearSwipeType(event);\r\n            }\r\n        }\r\n        else if (!this.eventType ||\r\n            this.eventType === 'horizontal-swipe' ||\r\n            this.eventType === 'vertical-swipe') {\r\n            return this.getLinearSwipeType(event);\r\n        }\r\n        return undefined;\r\n    }\r\n    getLinearSwipeType(event) {\r\n        if (this.eventType !== 'horizontal-swipe' &&\r\n            this.eventType !== 'vertical-swipe') {\r\n            const movementX = Math.abs(this.moveLeft(0, event) - this.startX);\r\n            const movementY = Math.abs(this.moveTop(0, event) - this.startY);\r\n            if (movementY * 3 > movementX) {\r\n                return 'vertical-swipe';\r\n            }\r\n            return 'horizontal-swipe';\r\n        }\r\n        return this.eventType;\r\n    }\r\n    getElementPosition() {\r\n        return this.element.getBoundingClientRect();\r\n    }\r\n    getTouchstartPosition(event) {\r\n        this.startX = event.touches[0].clientX - this.elementPosition.left;\r\n        this.startY = event.touches[0].clientY - this.elementPosition.top;\r\n    }\r\n    getMousedownPosition(event) {\r\n        this.startX = event.clientX - this.elementPosition.left;\r\n        this.startY = event.clientY - this.elementPosition.top;\r\n    }\r\n    moveLeft(index, event) {\r\n        const { touches } = event;\r\n        if (touches) {\r\n            return touches[index].clientX - this.elementPosition.left;\r\n        }\r\n        return event.clientX - this.elementPosition.left;\r\n    }\r\n    moveTop(index, event) {\r\n        const { touches } = event;\r\n        if (touches) {\r\n            return touches[index].clientY - this.elementPosition.top;\r\n        }\r\n        return event.clientY - this.elementPosition.top;\r\n    }\r\n    detectTouchScreen() {\r\n        const prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\r\n        const mq = function (query) {\r\n            return window.matchMedia(query).matches;\r\n        };\r\n        if ('ontouchstart' in window) {\r\n            return true;\r\n        }\r\n        // include the 'heartz' as a way to have a non matching MQ to help terminate the join\r\n        // https://git.io/vznFH\r\n        const query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\r\n        return mq(query);\r\n    }\r\n    /* Public properties and methods */\r\n    on(event, handler) {\r\n        if (event) {\r\n            this.handlers[event] = handler;\r\n        }\r\n    }\r\n}\n\nclass Carousel {\r\n    constructor(properties, utils, cells, container, slide) {\r\n        this.properties = properties;\r\n        this.utils = utils;\r\n        this.cells = cells;\r\n        this.container = container;\r\n        this.slide = slide;\r\n        this.autoplayId = null;\r\n        this.handleTouchstart = (event) => {\r\n            this.container.handleTouchstart();\r\n            this.slide.handleTouchstart(event);\r\n        };\r\n        this.handleHorizontalSwipe = (event) => {\r\n            this.container.handleHorizontalSwipe();\r\n        };\r\n        this.handleTouchend = (event) => {\r\n            if (this.properties.freeScroll) {\r\n                this.container.handleTouchend();\r\n            }\r\n            else {\r\n                this.container.handleTouchend(true);\r\n                this.slide.handleTouchend(event);\r\n            }\r\n        };\r\n        this.isNextArrowDisabled = () => this.slide.isNextArrowDisabled();\r\n        this.isPrevArrowDisabled = () => this.slide.isPrevArrowDisabled();\r\n        this.init();\r\n    }\r\n    get cellLength() {\r\n        return this.cells.cellLength;\r\n    }\r\n    get lastCellIndex() {\r\n        return this.cells.cellLength - 1;\r\n    }\r\n    get overflowCellsLimit() {\r\n        return this.utils.overflowCellsLimit;\r\n    }\r\n    get autoplayIsPossible() {\r\n        return this.properties.autoplayIsPossible;\r\n    }\r\n    get margin() {\r\n        return this.properties.margin;\r\n    }\r\n    get minSwipeDistance() {\r\n        return this.properties.minSwipeDistance;\r\n    }\r\n    get transitionDuration() {\r\n        return this.properties.transitionDuration;\r\n    }\r\n    get transitionTimingFunction() {\r\n        return this.properties.transitionTimingFunction;\r\n    }\r\n    get fullCellWidth() {\r\n        return this.properties.cellWidth + this.margin;\r\n    }\r\n    get numberOfVisibleCells() {\r\n        return this.utils.numberOfVisibleCells;\r\n    }\r\n    get slideCounter() {\r\n        return this.slide.counter;\r\n    }\r\n    updateProperties(properties) {\r\n        this.properties = properties;\r\n    }\r\n    init() {\r\n        this.cellsElement = this.properties.cellsElement;\r\n        this.visibleWidth =\r\n            this.properties.visibleWidth ||\r\n                this.cellsElement.parentElement.clientWidth;\r\n    }\r\n    destroy() {\r\n        clearInterval(this.autoplayId);\r\n    }\r\n    lineUpCells() {\r\n        this.cells.lineUp();\r\n    }\r\n    handleTransitionend() {\r\n        this.slide.handleTransitionend();\r\n    }\r\n    next(length = 1) {\r\n        if (!this.isNextArrowDisabled()) {\r\n            this.slide.next(length);\r\n        }\r\n    }\r\n    prev(length = 1) {\r\n        this.slide.prev(length);\r\n    }\r\n    autoplay() {\r\n        if (this.autoplayId === null) {\r\n            this.autoplayId = setInterval(() => {\r\n                if (this.autoplayIsPossible) {\r\n                    this.next();\r\n                }\r\n            }, this.properties.autoplayInterval);\r\n        }\r\n    }\r\n    stopAutoplay() {\r\n        if (this.autoplayId != null) {\r\n            clearInterval(this.autoplayId);\r\n            this.autoplayId = null;\r\n        }\r\n    }\r\n}\n\nclass Container {\r\n    constructor(carouselProperties, utils, cells) {\r\n        this.carouselProperties = carouselProperties;\r\n        this.utils = utils;\r\n        this.cells = cells;\r\n        /* The index of the new position relative to\r\n         * the active index, for example -1 or +1\r\n         */\r\n        this.initialPositionX = 0;\r\n        this.initialElementPositionX = 0;\r\n        this.pullLimit = 100;\r\n        this.startTime = 0;\r\n        this.startX = 0;\r\n        this.moveX = 0;\r\n        this.isSwipeInProgress = false;\r\n        this.init();\r\n    }\r\n    get visibleWidth() {\r\n        return this.utils.visibleWidth;\r\n    }\r\n    get overflowCellsLimit() {\r\n        return this.utils.overflowCellsLimit;\r\n    }\r\n    get element() {\r\n        return this.carouselProperties.cellsElement;\r\n    }\r\n    get freeScroll() {\r\n        return this.carouselProperties.freeScroll;\r\n    }\r\n    get fullCellWidth() {\r\n        return this.carouselProperties.cellWidth + this.carouselProperties.margin;\r\n    }\r\n    get numberOfVisibleCells() {\r\n        return this.utils.numberOfVisibleCells;\r\n    }\r\n    get transitionDuration() {\r\n        return this.carouselProperties.transitionDuration;\r\n    }\r\n    get transitionTimingFunction() {\r\n        return this.carouselProperties.transitionTimingFunction;\r\n    }\r\n    get cellLength() {\r\n        return this.cells.cellLength;\r\n    }\r\n    get tooFewCells() {\r\n        return this.numberOfVisibleCells > this.cellLength;\r\n    }\r\n    get disabled() {\r\n        return this.tooFewCells;\r\n    }\r\n    get margin() {\r\n        return this.carouselProperties.margin;\r\n    }\r\n    updateProperties(carouselProperties) {\r\n        this.carouselProperties = carouselProperties;\r\n    }\r\n    init() {\r\n        this.setWidth();\r\n    }\r\n    handleTouchstart() {\r\n        this.startX = this.utils.getStartX(event);\r\n        this.startTime = new Date().getTime();\r\n        this.initialElementPositionX = this.getInitialElementPositionX();\r\n    }\r\n    handleHorizontalSwipe() {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        if (!this.isSwipeInProgress) {\r\n            this.startX = this.utils.getStartX(event);\r\n            this.startTime = new Date().getTime();\r\n            this.initialElementPositionX = this.getInitialElementPositionX();\r\n        }\r\n        this.isSwipeInProgress = true;\r\n        this.moveX = this.utils.getMoveX(event);\r\n        this.move();\r\n    }\r\n    handleTouchend(simpleProcessing = false) {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        /* If touchend was passed to the Slide class */\r\n        if (simpleProcessing) {\r\n            this.isSwipeInProgress = false;\r\n            return;\r\n        }\r\n        this.isSwipeInProgress = false;\r\n        this.finishMoving();\r\n        this.clearInitialValues();\r\n    }\r\n    move() {\r\n        let positionX = this.getMovePositionX();\r\n        const isPulled = this.detectPulled();\r\n        const direction = this.getDirection();\r\n        if (isPulled) {\r\n            if ((isPulled.edge === 'left' && direction === 'right') ||\r\n                (isPulled.edge === 'right' && direction === 'left')) {\r\n                positionX = this.slowdownOnPull(positionX);\r\n            }\r\n        }\r\n        this.transformPositionX(positionX, 0);\r\n        if (this.freeScroll) {\r\n            this.initialPositionX = positionX;\r\n        }\r\n        if (isPulled) {\r\n            if (isPulled.edge === 'left' && isPulled.overflowX > this.pullLimit) {\r\n                this.initialPositionX = 0;\r\n            }\r\n            if (isPulled.edge === 'right' && isPulled.overflowX > this.pullLimit) {\r\n                this.initialPositionX = positionX;\r\n            }\r\n        }\r\n    }\r\n    getMovePositionX() {\r\n        const distance = this.getDistance();\r\n        return this.initialElementPositionX - distance;\r\n    }\r\n    getDistance() {\r\n        return this.startX - this.moveX;\r\n    }\r\n    /* If the container is pulled out of the left or right border */\r\n    detectPulled() {\r\n        const currentPositionX = this.getCurrentPositionX();\r\n        if (currentPositionX > 0) {\r\n            return {\r\n                edge: 'left',\r\n                positionX: currentPositionX,\r\n                overflowX: Math.abs(currentPositionX)\r\n            };\r\n        }\r\n        if (currentPositionX < this.getEndPosition()) {\r\n            return {\r\n                edge: 'right',\r\n                positionX: currentPositionX,\r\n                overflowX: Math.abs(currentPositionX - this.getEndPosition())\r\n            };\r\n        }\r\n        return undefined;\r\n    }\r\n    slowdownOnPull(_positionX) {\r\n        let distance = Math.abs(this.getDistance());\r\n        const endPosition = this.getEndPosition();\r\n        const isPulled = this.detectPulled();\r\n        if (!isPulled) {\r\n            return 0;\r\n        }\r\n        const decelerationRatio = 3 + isPulled.overflowX / 50;\r\n        let positionX = 0;\r\n        if (isPulled.edge === 'left') {\r\n            if (this.initialElementPositionX < 0) {\r\n                distance -= Math.abs(this.initialElementPositionX);\r\n            }\r\n            const rubberPositionX = distance / decelerationRatio;\r\n            positionX = rubberPositionX;\r\n            if (this.initialElementPositionX > 0) {\r\n                positionX = this.initialElementPositionX + rubberPositionX;\r\n            }\r\n            if (positionX > this.pullLimit) {\r\n                positionX = this.pullLimit;\r\n            }\r\n        }\r\n        if (isPulled.edge === 'right') {\r\n            const rubberPositionX = endPosition +\r\n                (this.initialElementPositionX - distance - endPosition) /\r\n                    decelerationRatio;\r\n            const containerWidth = this.getWidth();\r\n            positionX = rubberPositionX;\r\n            if (this.initialElementPositionX < -(containerWidth - this.visibleWidth)) {\r\n                positionX =\r\n                    containerWidth -\r\n                        this.visibleWidth +\r\n                        this.initialElementPositionX +\r\n                        rubberPositionX;\r\n            }\r\n            if (positionX < endPosition - this.pullLimit) {\r\n                positionX = endPosition - this.pullLimit;\r\n            }\r\n        }\r\n        return positionX;\r\n    }\r\n    finishMoving() {\r\n        const positionX = this.getMovePositionX();\r\n        let newPositionX = 0;\r\n        if (this.freeScroll) {\r\n            newPositionX = this.getInertia();\r\n        }\r\n        /* Align container while pulling */\r\n        newPositionX = this.getAlignedPositionOnPull(newPositionX);\r\n        this.transformPositionX(newPositionX);\r\n        this.setInitialPosition(positionX);\r\n    }\r\n    /* Returns the new position of the container with inertia */\r\n    getInertia() {\r\n        const distance = this.getDistance();\r\n        const currentTime = new Date().getTime();\r\n        const tapLength = currentTime - this.startTime;\r\n        const inertia = (distance / tapLength) * 100;\r\n        return this.initialPositionX - inertia;\r\n    }\r\n    getAlignedPositionOnPull(newPositionX) {\r\n        const direction = this.getDirection();\r\n        if (direction === 'left') {\r\n            const endPosition = this.getEndPosition();\r\n            if (newPositionX < endPosition) {\r\n                return endPosition;\r\n            }\r\n        }\r\n        return newPositionX;\r\n    }\r\n    getCurrentPositionX() {\r\n        const parentPosition = this.element.parentElement.getBoundingClientRect();\r\n        const position = this.element.getBoundingClientRect();\r\n        return position.left - parentPosition.left;\r\n    }\r\n    getEndPosition() {\r\n        const width = this.getWidth();\r\n        const visibleWidth = this.element.parentElement.clientWidth;\r\n        return visibleWidth - width;\r\n    }\r\n    transformPositionX(value, duration = this.transitionDuration) {\r\n        if (value === undefined) {\r\n            return;\r\n        }\r\n        this.element.style.transition = `transform ${duration}ms ${this.transitionTimingFunction}`;\r\n        this.element.style.transform = `translateX(${value}px)`;\r\n    }\r\n    getWidth() {\r\n        return this.cellLength * this.fullCellWidth;\r\n    }\r\n    setWidth() {\r\n        const width = this.getWidth();\r\n        this.element.style.width = `${width}px`;\r\n    }\r\n    setInitialPosition(position) {\r\n        this.initialPositionX = position;\r\n    }\r\n    getElementPosition() {\r\n        return this.element.getBoundingClientRect();\r\n    }\r\n    getInitialElementPositionX() {\r\n        const carouselElementPosition = this.utils.getCarouselElementPosition().left;\r\n        return this.getElementPosition().left - carouselElementPosition;\r\n    }\r\n    clearInitialValues() {\r\n        this.startX = this.moveX = 0;\r\n    }\r\n    getDirection() {\r\n        const direction = Math.sign(this.startX - this.moveX);\r\n        if (direction === -1) {\r\n            return 'right';\r\n        }\r\n        if (direction === 1) {\r\n            return 'left';\r\n        }\r\n        return undefined;\r\n    }\r\n}\n\nclass Cells {\r\n    constructor(carouselProperties, utils) {\r\n        this.carouselProperties = carouselProperties;\r\n        this.utils = utils;\r\n        this.counter = 0;\r\n        this.init(carouselProperties);\r\n    }\r\n    get cellLength() {\r\n        return this.cells ? this.cells.length : 0;\r\n    }\r\n    get fullCellWidth() {\r\n        return this.carouselProperties.cellWidth + this.carouselProperties.margin;\r\n    }\r\n    get cellLengthInLightDOMMode() {\r\n        return this.cellLength;\r\n    }\r\n    get numberOfVisibleCells() {\r\n        return this.utils.numberOfVisibleCells;\r\n    }\r\n    get overflowCellsLimit() {\r\n        return this.utils.overflowCellsLimit;\r\n    }\r\n    updateProperties(carouselProperties) {\r\n        this.carouselProperties = carouselProperties;\r\n    }\r\n    lineUp() {\r\n        const cells = this.element ? this.element.children : [];\r\n        for (let i = 0; i < cells.length; i++) {\r\n            const cell = cells[i];\r\n            const positionX = this.getCellPositionInContainer(i);\r\n            cell.style.transform = `translateX(${positionX}px)`;\r\n            cell.style.width = `${this.carouselProperties.cellWidth}px`;\r\n        }\r\n    }\r\n    ifSequenceOfCellsIsChanged() {\r\n        const cells = this.element.children;\r\n        return cells[0].style.transform !== 'translateX(0px)';\r\n    }\r\n    getCellPositionInContainer(cellIndexInDOMTree) {\r\n        return cellIndexInDOMTree * this.fullCellWidth;\r\n    }\r\n    setCounter(value) {\r\n        this.counter = value;\r\n    }\r\n    init(carouselProperties) {\r\n        this.element = this.carouselProperties.cellsElement;\r\n        this.cells = this.element.children;\r\n        this.visibleWidth =\r\n            this.carouselProperties.visibleWidth ||\r\n                this.element.parentElement.clientWidth;\r\n    }\r\n}\n\nclass Slide {\r\n    constructor(carouselProperties, utils, cells, container) {\r\n        this.carouselProperties = carouselProperties;\r\n        this.utils = utils;\r\n        this.cells = cells;\r\n        this.container = container;\r\n        this.slideLength = 0;\r\n        this.isSlideInProgress = false;\r\n        this.counter = 0;\r\n        this._counter = 0;\r\n        this.distance = 0;\r\n        this.distanceAbs = 0;\r\n        this.isNotClickOnArrow = false;\r\n        this.initialPositionX = 0;\r\n        this.currentPositionX = 0;\r\n        /* The slide length has been limited by the limitSlideLength() method */\r\n        this.isSlideLengthLimited = false;\r\n        this.init();\r\n    }\r\n    get fullCellWidth() {\r\n        return this.carouselProperties.cellWidth + this.carouselProperties.margin;\r\n    }\r\n    get margin() {\r\n        return this.carouselProperties.margin;\r\n    }\r\n    get minSwipeDistance() {\r\n        return this.carouselProperties.minSwipeDistance;\r\n    }\r\n    get numberOfVisibleCells() {\r\n        return this.utils.numberOfVisibleCells;\r\n    }\r\n    get visibleCellsOverflowContainer() {\r\n        return this.utils.visibleCellsOverflowContainer;\r\n    }\r\n    /* The position to which the container returns after each slide\r\n     * in the light DUM tree mode.\r\n     */\r\n    get fixedContainerPosition() {\r\n        return -(this.overflowCellsLimit * this.fullCellWidth);\r\n    }\r\n    get overflowCellsLimit() {\r\n        return this.utils.overflowCellsLimit;\r\n    }\r\n    /* Number of cell elements in the DUM tree */\r\n    get cellLength() {\r\n        return this.cells.cellLength;\r\n    }\r\n    updateProperties(carouselProperties) {\r\n        this.carouselProperties = carouselProperties;\r\n        this.setVisibleWidth();\r\n    }\r\n    init() {\r\n        this.visibleWidth =\r\n            this.carouselProperties.visibleWidth ||\r\n                this.carouselProperties.hostElement.clientWidth;\r\n    }\r\n    handleTouchstart() {\r\n        /* Touchstart event is not called for arrow */\r\n        this.isNotClickOnArrow = true;\r\n        this.isSlideLengthLimited = false;\r\n        if (!this.isSlideInProgress) {\r\n            this.initialPositionX = this.container.getCurrentPositionX();\r\n        }\r\n    }\r\n    handleTouchend() {\r\n        if (!this.isNotClickOnArrow) {\r\n            return;\r\n        }\r\n        this.currentPositionX = this.container.getCurrentPositionX();\r\n        this.distanceAbs = Math.abs(this.initialPositionX - this.currentPositionX);\r\n        this.distance = this.initialPositionX - this.currentPositionX;\r\n        this.direction = this.getDirection();\r\n        this.isNotClickOnArrow = false;\r\n        this.handleSlide();\r\n    }\r\n    handleTransitionend() {\r\n        this.setCounter();\r\n        this.isSlideInProgress = false;\r\n    }\r\n    handleSlide(customSlideLength = undefined) {\r\n        const isUsingButton = customSlideLength;\r\n        let newPositionX;\r\n        if ((isUsingButton && this.isSlideInProgress) || !this.direction) {\r\n            return;\r\n        }\r\n        /* Custom slide length is used in arrows */\r\n        if (customSlideLength) {\r\n            this.slideLength = this.limitSlideLength(customSlideLength);\r\n            if (!this.isSlideInProgress) {\r\n                this.initialPositionX = this.container.getCurrentPositionX();\r\n            }\r\n        }\r\n        else {\r\n            this.slideLength = this.getSlideLength(this.distanceAbs);\r\n        }\r\n        /* Store intermediate counter value */\r\n        this._counter = this.getPreliminaryCounter();\r\n        if (this.direction === 'left') {\r\n            if (!customSlideLength) {\r\n                this.slideLength = this.limitSlideLength(this.getSlideLength(this.distanceAbs));\r\n            }\r\n            this._counter = this.getPreliminaryCounter();\r\n            const isSlidesEnd = this.isSlidesEnd(this._counter);\r\n            newPositionX = this.getPositionByIndex(this._counter);\r\n            if (isSlidesEnd) {\r\n                this._counter = this.counter;\r\n                newPositionX = this.getPositionByIndex(this.counter);\r\n                this.slideLength = 0;\r\n            }\r\n        }\r\n        if (this.direction === 'right') {\r\n            if (!customSlideLength) {\r\n                this.slideLength = this.getSlideLength(this.distanceAbs);\r\n            }\r\n            if (this._counter < 0) {\r\n                this._counter = this.counter;\r\n                this.slideLength = this.counter;\r\n            }\r\n            newPositionX = this.getPositionByIndex(this.counter - this.slideLength);\r\n        }\r\n        if (this.container.getCurrentPositionX() !== newPositionX) {\r\n            this.isSlideInProgress = true;\r\n            this.container.transformPositionX(newPositionX);\r\n        }\r\n    }\r\n    next(length = 1) {\r\n        this.direction = 'left';\r\n        this.handleSlide(length);\r\n    }\r\n    prev(length = 1) {\r\n        this.direction = 'right';\r\n        this.handleSlide(length);\r\n    }\r\n    select(index) {\r\n        if (index > this.cellLength - 1) {\r\n            return;\r\n        }\r\n        if (index > this.counter) {\r\n            const length = index - this.counter;\r\n            this.next(length);\r\n        }\r\n        if (index < this.counter) {\r\n            const length = this.counter - index;\r\n            this.prev(length);\r\n        }\r\n    }\r\n    getPreliminaryCounter() {\r\n        if (this.direction === 'left') {\r\n            return this.counter + this.slideLength;\r\n        }\r\n        if (this.direction === 'right') {\r\n            return this.counter - this.slideLength;\r\n        }\r\n        return 0;\r\n    }\r\n    /*\r\n     * Limits the length of the slide during calls to the next() and prev()\r\n     * methods if the specified position is outside the cell length\r\n     */\r\n    limitSlideLength(slideLength) {\r\n        if (slideLength > 1) {\r\n            for (let i = 0; i < slideLength; i++) {\r\n                const newCounter = this.counter + (slideLength - i);\r\n                if (!this.isSlidesEnd(newCounter)) {\r\n                    slideLength -= i;\r\n                    this.isSlideLengthLimited = i > 0;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return slideLength;\r\n    }\r\n    /* Offset the container to show the last cell completely */\r\n    getPositionCorrection(counter) {\r\n        let correction = 0;\r\n        const isLastSlide = this.isLastSlide(counter);\r\n        if (this.isSlideLengthLimited || isLastSlide) {\r\n            const cellsWidth = this.cells.cellLengthInLightDOMMode * this.fullCellWidth;\r\n            if (this.visibleWidth < cellsWidth) {\r\n                correction = -(this.numberOfVisibleCells * this.fullCellWidth -\r\n                    this.visibleWidth -\r\n                    this.margin);\r\n            }\r\n            if (correction >= -this.margin) {\r\n                correction = 0;\r\n            }\r\n        }\r\n        return correction;\r\n    }\r\n    getSlideLength(distanceAbs) {\r\n        let length = Math.floor(distanceAbs / this.fullCellWidth);\r\n        if (distanceAbs % this.fullCellWidth >= this.minSwipeDistance) {\r\n            length++;\r\n        }\r\n        return length;\r\n    }\r\n    getDistanceAbs() {\r\n        return Math.abs(this.initialPositionX - this.currentPositionX);\r\n    }\r\n    getDirection() {\r\n        const direction = Math.sign(this.initialPositionX - this.currentPositionX);\r\n        if (direction === -1) {\r\n            return 'right';\r\n        }\r\n        if (direction === 1) {\r\n            return 'left';\r\n        }\r\n        return undefined;\r\n    }\r\n    isSlidesEnd(counter) {\r\n        const margin = this.visibleCellsOverflowContainer ? 1 : 0;\r\n        const imageLength = this.cells.cellLength;\r\n        return imageLength - counter + margin < this.numberOfVisibleCells;\r\n    }\r\n    isLastSlide(counter) {\r\n        return this.isSlidesEnd(counter + 1);\r\n    }\r\n    setCounter() {\r\n        if (this.direction === 'left') {\r\n            this.counter += this.slideLength;\r\n        }\r\n        if (this.direction === 'right') {\r\n            this.counter -= this.slideLength;\r\n        }\r\n    }\r\n    getPositionByIndex(_counter) {\r\n        let correction = this.getPositionCorrection(this.counter + this.slideLength);\r\n        let position;\r\n        if (correction !== 0) {\r\n            correction += this.fullCellWidth;\r\n        }\r\n        if (this.direction === 'right') {\r\n            correction = 0;\r\n        }\r\n        position = -(_counter * this.fullCellWidth - correction);\r\n        position = this.provideSafePosition(position);\r\n        return position;\r\n    }\r\n    provideSafePosition(position) {\r\n        const endPosition = this.container.getEndPosition();\r\n        if (this.direction === 'left') {\r\n            if (position > 0) {\r\n                position = 0;\r\n            }\r\n        }\r\n        if (this.direction === 'right') {\r\n            if (position < endPosition) {\r\n                position = endPosition;\r\n            }\r\n        }\r\n        return position;\r\n    }\r\n    getPositionWithoutCorrection(value) {\r\n        const remainder = Math.round(value) % this.fullCellWidth;\r\n        if (remainder !== 0) {\r\n            return value - (this.fullCellWidth + remainder);\r\n        }\r\n        return value;\r\n    }\r\n    isNextArrowDisabled() {\r\n        return (this.isLastSlide(this.counter) ||\r\n            (!this.visibleCellsOverflowContainer &&\r\n                this.cellLength <= this.numberOfVisibleCells) ||\r\n            (this.visibleCellsOverflowContainer &&\r\n                this.cellLength < this.numberOfVisibleCells));\r\n    }\r\n    isPrevArrowDisabled() {\r\n        return this.counter === 0;\r\n    }\r\n    alignContainerFast() {\r\n        if (this.ifLeftDOMModeToBeginning(this.counter)) {\r\n            /* If we have already exited the light DOM mode but\r\n             * the cells are still out of place\r\n             */\r\n            if (this.cells.ifSequenceOfCellsIsChanged()) {\r\n                const positionX = -(this.counter * this.fullCellWidth);\r\n                this.container.transformPositionX(positionX, 0);\r\n                this.cells.setCounter(this.counter);\r\n                this.cells.lineUp();\r\n            }\r\n        }\r\n    }\r\n    ifLeftDOMModeToBeginning(counter) {\r\n        let flag;\r\n        if (counter <= this.overflowCellsLimit) {\r\n            flag = true;\r\n        }\r\n        if (this.counter <= this.overflowCellsLimit) {\r\n            flag = true;\r\n        }\r\n        return flag;\r\n    }\r\n    setVisibleWidth() {\r\n        this.visibleWidth =\r\n            this.carouselProperties.visibleWidth ||\r\n                this.carouselProperties.hostElement.clientWidth;\r\n    }\r\n}\n\nclass Utils {\r\n    constructor(carouselProperties) {\r\n        this.carouselProperties = carouselProperties;\r\n    }\r\n    get margin() {\r\n        return this.carouselProperties.margin;\r\n    }\r\n    get overflowCellsLimit() {\r\n        return this.carouselProperties.overflowCellsLimit;\r\n    }\r\n    get numberOfVisibleCells() {\r\n        return Math.ceil(this.visibleWidth / this.fullCellWidth);\r\n    }\r\n    get visibleCellsOverflowContainer() {\r\n        return (this.numberOfVisibleCells * this.fullCellWidth - this.margin >\r\n            this.visibleWidth);\r\n    }\r\n    get fullCellWidth() {\r\n        return this.carouselProperties.cellWidth + this.carouselProperties.margin;\r\n    }\r\n    get visibleWidth() {\r\n        return (this.carouselProperties.visibleWidth ||\r\n            this.carouselProperties.cellsElement.parentElement.clientWidth);\r\n    }\r\n    updateProperties(carouselProperties) {\r\n        this.carouselProperties = carouselProperties;\r\n    }\r\n    getStartX(event) {\r\n        const { touches } = event;\r\n        const carouselElementPosition = this.getCarouselElementPosition().left;\r\n        let startX;\r\n        if (touches) {\r\n            startX = touches[0].clientX - carouselElementPosition;\r\n        }\r\n        else {\r\n            startX = event.clientX - carouselElementPosition;\r\n        }\r\n        return startX;\r\n    }\r\n    getMoveX(event) {\r\n        const { touches } = event;\r\n        const carouselElementPositionX = this.getCarouselElementPosition().left;\r\n        if (touches) {\r\n            return touches[0].clientX - carouselElementPositionX;\r\n        }\r\n        return event.clientX - carouselElementPositionX;\r\n    }\r\n    getCarouselElementPosition() {\r\n        return this.carouselProperties.hostElement.getBoundingClientRect();\r\n    }\r\n}\n\nclass CarouselComponent {\r\n    constructor(elementRef, ref) {\r\n        this.elementRef = elementRef;\r\n        this.ref = ref;\r\n        this._isCounter = false;\r\n        this._cellWidth = 200;\r\n        this.isMoving = false;\r\n        this.isNgContent = false;\r\n        this.events = new EventEmitter();\r\n        this.height = 450;\r\n        this.autoplay = true;\r\n        this.autoplayInterval = 5000;\r\n        this.pauseOnHover = true;\r\n        this.dots = false;\r\n        this.margin = 10;\r\n        this.objectFit = 'cover';\r\n        this.minSwipeDistance = 10;\r\n        this.transitionDuration = 200;\r\n        this.transitionTimingFunction = 'ease-out';\r\n        this.counterSeparator = ' / ';\r\n        this.overflowCellsLimit = 3;\r\n        this.listeners = 'mouse and touch';\r\n        this.cellsToShow = 1;\r\n        this.cellsToScroll = 1;\r\n        this.freeScroll = false;\r\n        this.arrows = true;\r\n        this.arrowsOutside = false;\r\n        this.arrowsTheme = 'light';\r\n        this.hostClassCarousel = true;\r\n        this.handleTouchstart = (event) => {\r\n            this.touches.addEventListeners('mousemove', 'handleMousemove');\r\n            this.carousel.handleTouchstart(event);\r\n            this.isMoving = true;\r\n        };\r\n        this.handleHorizontalSwipe = (event) => {\r\n            event.preventDefault();\r\n            this.carousel.handleHorizontalSwipe(event);\r\n        };\r\n        this.handleTouchend = (event) => {\r\n            const { touches } = event;\r\n            this.carousel.handleTouchend(event);\r\n            this.touches.removeEventListeners('mousemove', 'handleMousemove');\r\n            this.isMoving = false;\r\n        };\r\n        this.handleTap = (event) => {\r\n            const outboundEvent = {\r\n                name: 'click'\r\n            };\r\n            const nodes = Array.prototype.slice.call(this.cellsElement.children);\r\n            const cellElement = event.srcElement.closest('.carousel-cell');\r\n            const i = nodes.indexOf(cellElement);\r\n            const cellIndex = nodes.indexOf(cellElement);\r\n            outboundEvent.cellIndex = cellIndex;\r\n        };\r\n    }\r\n    get slideCounter() {\r\n        if (this.carousel) {\r\n            return this.carousel.slideCounter;\r\n        }\r\n    }\r\n    get lapCounter() {\r\n        if (this.carousel) {\r\n            return this.carousel.lapCounter;\r\n        }\r\n    }\r\n    get isLandscape() {\r\n        return window.innerWidth > window.innerHeight;\r\n    }\r\n    get isSafari() {\r\n        const ua = navigator.userAgent.toLowerCase();\r\n        if (ua.indexOf('safari') !== -1) {\r\n            return !(ua.indexOf('chrome') > -1);\r\n        }\r\n    }\r\n    get counter() {\r\n        const counter = this.slideCounter;\r\n        return counter + 1 + this.counterSeparator + this.cellLength;\r\n    }\r\n    get cellsElement() {\r\n        return this.elementRef.nativeElement.querySelector('.carousel-cells');\r\n    }\r\n    get isArrows() {\r\n        return this.arrows && !this.freeScroll;\r\n    }\r\n    get isCounter() {\r\n        return this._isCounter && this.cellLength > 1;\r\n    }\r\n    get activeDotIndex() {\r\n        return this.slideCounter % this.cellLength;\r\n    }\r\n    get cellLimit() {\r\n        if (this.carousel) {\r\n            return this.carousel.cellLimit;\r\n        }\r\n    }\r\n    get carouselWidth() {\r\n        return this.elementRef.nativeElement.clientWidth;\r\n    }\r\n    set cellWidth(value) {\r\n        if (value) {\r\n            this._cellWidth = value;\r\n        }\r\n    }\r\n    set isCounter(value) {\r\n        if (value) {\r\n            this._isCounter = value;\r\n        }\r\n    }\r\n    onWindowResize(event) {\r\n        if (this.utils.visibleWidth !== this.savedCarouselWidth) {\r\n            this.resize();\r\n        }\r\n    }\r\n    onMouseEnter() {\r\n        if (this.autoplay && this.pauseOnHover) {\r\n            this.carouselProperties.autoplayIsPossible = false;\r\n            this.carousel.stopAutoplay();\r\n        }\r\n    }\r\n    onMouseLeave() {\r\n        if (this.autoplay && this.pauseOnHover) {\r\n            this.carouselProperties.autoplayIsPossible = true;\r\n            this.carousel.autoplay();\r\n        }\r\n    }\r\n    onDragStart() {\r\n        return false;\r\n    }\r\n    ngOnInit() {\r\n        this.isNgContent = this.cellsElement.children.length > 0;\r\n        this.touches = new Touches({\r\n            element: this.cellsElement,\r\n            listeners: this.listeners,\r\n            mouseListeners: {\r\n                mousedown: 'handleMousedown',\r\n                mouseup: 'handleMouseup'\r\n            }\r\n        });\r\n        this.touches.on('touchstart', this.handleTouchstart);\r\n        this.touches.on('horizontal-swipe', this.handleHorizontalSwipe);\r\n        this.touches.on('touchend', this.handleTouchend);\r\n        this.touches.on('mousedown', this.handleTouchstart);\r\n        this.touches.on('mouseup', this.handleTouchend);\r\n        this.touches.on('tap', this.handleTap);\r\n        this.setDimensions();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.initCarousel();\r\n        this.cellLength = this.getCellLength();\r\n        this.dotsArr = Array(this.cellLength).fill(1);\r\n        this.ref.detectChanges();\r\n        this.carousel.lineUpCells();\r\n        this.savedCarouselWidth = this.carouselWidth;\r\n        /* Start detecting changes in the DOM tree */\r\n        this.detectDomChanges();\r\n    }\r\n    ngOnChanges(changes) {\r\n        const isFirstChange = Object.values(changes).some(change => change.isFirstChange());\r\n        if (!isFirstChange && (changes.width || changes.height)) {\r\n            this.setDimensions();\r\n            this.initCarousel();\r\n            this.carousel.lineUpCells();\r\n            this.ref.detectChanges();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.touches.destroy();\r\n        // this.carousel.destroy();\r\n    }\r\n    initCarousel() {\r\n        this.carouselProperties = {\r\n            id: this.id,\r\n            cellsElement: this.elementRef.nativeElement.querySelector('.carousel-cells'),\r\n            hostElement: this.elementRef.nativeElement,\r\n            cellWidth: this.getCellWidth(),\r\n            autoplayInterval: this.autoplayInterval,\r\n            autoplayIsPossible: true,\r\n            overflowCellsLimit: this.overflowCellsLimit,\r\n            visibleWidth: this.width,\r\n            margin: this.margin,\r\n            minSwipeDistance: this.minSwipeDistance,\r\n            transitionDuration: this.transitionDuration,\r\n            transitionTimingFunction: this.transitionTimingFunction,\r\n            videoProperties: this.videoProperties,\r\n            eventHandler: this.events,\r\n            freeScroll: this.freeScroll\r\n        };\r\n        this.utils = new Utils(this.carouselProperties);\r\n        this.cells = new Cells(this.carouselProperties, this.utils);\r\n        this.container = new Container(this.carouselProperties, this.utils, this.cells);\r\n        this.slide = new Slide(this.carouselProperties, this.utils, this.cells, this.container);\r\n        if (this.autoplay && this.carousel) {\r\n            this.carousel.stopAutoplay();\r\n        }\r\n        this.carousel = new Carousel(this.carouselProperties, this.utils, this.cells, this.container, this.slide);\r\n        if (this.autoplay) {\r\n            this.carousel.autoplay();\r\n        }\r\n    }\r\n    resize() {\r\n        this.landscapeMode = this.isLandscape;\r\n        this.savedCarouselWidth = this.carouselWidth;\r\n        this.carouselProperties.cellWidth = this.getCellWidth();\r\n        this.cells.updateProperties(this.carouselProperties);\r\n        this.carousel.updateProperties(this.carouselProperties);\r\n        this.container.updateProperties(this.carouselProperties);\r\n        this.slide.updateProperties(this.carouselProperties);\r\n        this.utils.updateProperties(this.carouselProperties);\r\n        this.carousel.lineUpCells();\r\n        this.slide.select(0);\r\n        this.ref.detectChanges();\r\n    }\r\n    detectDomChanges() {\r\n        const observer = new MutationObserver((mutations) => {\r\n            this.onDomChanges();\r\n        });\r\n        const config = {\r\n            attributes: true,\r\n            childList: true,\r\n            characterData: true\r\n        };\r\n        observer.observe(this.cellsElement, config);\r\n    }\r\n    onDomChanges() {\r\n        this.cellLength = this.getCellLength();\r\n        this.carousel.lineUpCells();\r\n        this.ref.detectChanges();\r\n    }\r\n    setDimensions() {\r\n        this.hostStyleHeight = `${this.height}px`;\r\n        this.hostStyleWidth = `${this.width}px`;\r\n    }\r\n    handleTransitionendCellContainer(event) {\r\n        if (event.target.className === 'carousel-cells') {\r\n            this.carousel.handleTransitionend();\r\n        }\r\n    }\r\n    getCellWidth() {\r\n        const elementWidth = this.carouselWidth;\r\n        if (this.cellsToShow) {\r\n            const margin = this.cellsToShow > 1 ? this.margin : 0;\r\n            const totalMargin = margin * (this.cellsToShow - 1);\r\n            return (elementWidth - totalMargin) / this.cellsToShow;\r\n        }\r\n        if (this._cellWidth === '100%') {\r\n            return elementWidth;\r\n        }\r\n        return this._cellWidth;\r\n    }\r\n    next() {\r\n        this.carousel.next(this.cellsToScroll);\r\n        this.carousel.stopAutoplay();\r\n    }\r\n    prev() {\r\n        this.carousel.prev(this.cellsToScroll);\r\n        this.carousel.stopAutoplay();\r\n    }\r\n    isNextArrowDisabled() {\r\n        if (this.carousel) {\r\n            return this.carousel.isNextArrowDisabled();\r\n        }\r\n    }\r\n    isPrevArrowDisabled() {\r\n        if (this.carousel) {\r\n            return this.carousel.isPrevArrowDisabled();\r\n        }\r\n    }\r\n    getCellLength() {\r\n        return this.cellsElement.children.length;\r\n    }\r\n}\r\nCarouselComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: CarouselComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\r\nCarouselComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: CarouselComponent, selector: \"carousel, [carousel]\", inputs: { id: \"id\", height: \"height\", width: \"width\", autoplay: \"autoplay\", autoplayInterval: \"autoplayInterval\", pauseOnHover: \"pauseOnHover\", dots: \"dots\", borderRadius: \"borderRadius\", margin: \"margin\", objectFit: \"objectFit\", minSwipeDistance: \"minSwipeDistance\", transitionDuration: \"transitionDuration\", transitionTimingFunction: \"transitionTimingFunction\", videoProperties: \"videoProperties\", counterSeparator: \"counterSeparator\", overflowCellsLimit: \"overflowCellsLimit\", listeners: \"listeners\", cellsToShow: \"cellsToShow\", cellsToScroll: \"cellsToScroll\", freeScroll: \"freeScroll\", arrows: \"arrows\", arrowsOutside: \"arrowsOutside\", arrowsTheme: \"arrowsTheme\", cellWidth: \"cellWidth\", isCounter: [\"counter\", \"isCounter\"] }, outputs: { events: \"events\" }, host: { listeners: { \"window:resize\": \"onWindowResize($event)\", \"mouseenter\": \"onMouseEnter($event)\", \"mouseleave\": \"onMouseLeave($event)\", \"dragstart\": \"onDragStart($event)\" }, properties: { \"class.carousel\": \"this.hostClassCarousel\", \"style.height\": \"this.hostStyleHeight\", \"style.width\": \"this.hostStyleWidth\" } }, usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"carousel-counter\\\" *ngIf=\\\"isCounter\\\">{{counter}}</div>\\r\\n\\r\\n<div class=\\\"carousel-container\\\" [class.carousel-moving]=\\\"isMoving\\\">\\r\\n\\t<div class=\\\"carousel-cells\\\" #cells (transitionend)=\\\"handleTransitionendCellContainer($event)\\\">\\r\\n\\t\\t<ng-content></ng-content>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"carousel-dots\\\" *ngIf=\\\"dots\\\">\\r\\n\\t\\t<div class=\\\"carousel-dot\\\" [class.carousel-dot-active]=\\\"i === activeDotIndex\\\" *ngFor=\\\"let dot of dotsArr; index as i\\\"></div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"carousel-arrows\\\"\\r\\n\\t[class.carousel-arrows-outside]=\\\"arrowsOutside\\\"\\r\\n\\t[class.carousel-dark-arrows]=\\\"arrowsTheme === 'dark'\\\"\\r\\n\\t*ngIf=\\\"isArrows\\\">\\r\\n\\r\\n\\t<div class=\\\"carousel-arrow carousel-arrow-prev\\\" [class.carousel-arrow-disabled]=\\\"isPrevArrowDisabled()\\\" (click)=\\\"prev()\\\"></div>\\r\\n\\t<div class=\\\"carousel-arrow carousel-arrow-next\\\" [class.carousel-arrow-disabled]=\\\"isNextArrowDisabled()\\\" (click)=\\\"next()\\\"></div>\\r\\n</div>\\r\\n\", styles: [\":host{-webkit-user-select:none;user-select:none;position:relative;z-index:10000;top:0;left:0;transform-origin:top left;display:block;box-sizing:border-box;width:100%;height:100%}:host .carousel-container{cursor:grab;overflow:hidden;width:100%;height:100%}:host .carousel-container.carousel-moving{cursor:grabbing}:host .carousel-counter{position:absolute;z-index:30;top:8px;right:24px;padding:5px 7px;font-size:11px;line-height:initial;color:#fff;text-align:right;background-color:#1725444d;border-radius:13px;transition:opacity .2s}:host ::ng-deep .carousel-cells{will-change:transform;display:block;width:100%;height:100%;transition:transform .2s}:host ::ng-deep .carousel-cells .carousel-cell{position:absolute;overflow:hidden;width:100%;height:100%}:host ::ng-deep .carousel-cells .carousel-cell img,:host ::ng-deep .carousel-cells .carousel-cell video{position:relative;width:100%;height:100%;object-fit:contain}:host ::ng-deep .carousel-cells .carousel-cell img.swiper-hide{display:none}:host ::ng-deep .carousel-cells .carousel-cell .carousel-play{position:absolute;z-index:1;inset:0}:host .carousel-arrow{cursor:pointer;position:absolute;z-index:10;top:50%;display:inline-block;width:20px;height:20px;margin-top:-10px;opacity:0;border:solid rgba(255,255,255,.6);border-width:0 4px 4px 0;border-radius:2px;transition:opacity .1s ease-in-out}:host .carousel-arrow:before{content:\\\" \\\";position:absolute;top:-50px;left:-50px;display:inline-block;width:100px;height:100px;border:0}:host .carousel-arrow:hover{opacity:.5}:host .carousel-arrow-prev{left:35px;transform:rotate(135deg)}:host .carousel-arrow-next{right:35px;transform:rotate(-45deg)}:host .carousel-arrows-outside .carousel-arrow-prev{left:-60px}:host .carousel-arrows-outside .carousel-arrow-next{right:-60px}:host .carousel-dark-arrows .carousel-arrow{filter:invert(1)}:host .carousel-arrow-disabled{display:none}:host .carousel-dots{position:absolute;z-index:10;right:0;bottom:0;left:0;text-align:center}:host .carousel-dots .carousel-dot{display:inline-block;width:8px;height:8px;margin:4px;border:2px solid #fff;border-radius:100px}:host .carousel-dots .carousel-dot-active{background-color:#fff}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: CarouselComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'carousel, [carousel]', template: \"<div class=\\\"carousel-counter\\\" *ngIf=\\\"isCounter\\\">{{counter}}</div>\\r\\n\\r\\n<div class=\\\"carousel-container\\\" [class.carousel-moving]=\\\"isMoving\\\">\\r\\n\\t<div class=\\\"carousel-cells\\\" #cells (transitionend)=\\\"handleTransitionendCellContainer($event)\\\">\\r\\n\\t\\t<ng-content></ng-content>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"carousel-dots\\\" *ngIf=\\\"dots\\\">\\r\\n\\t\\t<div class=\\\"carousel-dot\\\" [class.carousel-dot-active]=\\\"i === activeDotIndex\\\" *ngFor=\\\"let dot of dotsArr; index as i\\\"></div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"carousel-arrows\\\"\\r\\n\\t[class.carousel-arrows-outside]=\\\"arrowsOutside\\\"\\r\\n\\t[class.carousel-dark-arrows]=\\\"arrowsTheme === 'dark'\\\"\\r\\n\\t*ngIf=\\\"isArrows\\\">\\r\\n\\r\\n\\t<div class=\\\"carousel-arrow carousel-arrow-prev\\\" [class.carousel-arrow-disabled]=\\\"isPrevArrowDisabled()\\\" (click)=\\\"prev()\\\"></div>\\r\\n\\t<div class=\\\"carousel-arrow carousel-arrow-next\\\" [class.carousel-arrow-disabled]=\\\"isNextArrowDisabled()\\\" (click)=\\\"next()\\\"></div>\\r\\n</div>\\r\\n\", styles: [\":host{-webkit-user-select:none;user-select:none;position:relative;z-index:10000;top:0;left:0;transform-origin:top left;display:block;box-sizing:border-box;width:100%;height:100%}:host .carousel-container{cursor:grab;overflow:hidden;width:100%;height:100%}:host .carousel-container.carousel-moving{cursor:grabbing}:host .carousel-counter{position:absolute;z-index:30;top:8px;right:24px;padding:5px 7px;font-size:11px;line-height:initial;color:#fff;text-align:right;background-color:#1725444d;border-radius:13px;transition:opacity .2s}:host ::ng-deep .carousel-cells{will-change:transform;display:block;width:100%;height:100%;transition:transform .2s}:host ::ng-deep .carousel-cells .carousel-cell{position:absolute;overflow:hidden;width:100%;height:100%}:host ::ng-deep .carousel-cells .carousel-cell img,:host ::ng-deep .carousel-cells .carousel-cell video{position:relative;width:100%;height:100%;object-fit:contain}:host ::ng-deep .carousel-cells .carousel-cell img.swiper-hide{display:none}:host ::ng-deep .carousel-cells .carousel-cell .carousel-play{position:absolute;z-index:1;inset:0}:host .carousel-arrow{cursor:pointer;position:absolute;z-index:10;top:50%;display:inline-block;width:20px;height:20px;margin-top:-10px;opacity:0;border:solid rgba(255,255,255,.6);border-width:0 4px 4px 0;border-radius:2px;transition:opacity .1s ease-in-out}:host .carousel-arrow:before{content:\\\" \\\";position:absolute;top:-50px;left:-50px;display:inline-block;width:100px;height:100px;border:0}:host .carousel-arrow:hover{opacity:.5}:host .carousel-arrow-prev{left:35px;transform:rotate(135deg)}:host .carousel-arrow-next{right:35px;transform:rotate(-45deg)}:host .carousel-arrows-outside .carousel-arrow-prev{left:-60px}:host .carousel-arrows-outside .carousel-arrow-next{right:-60px}:host .carousel-dark-arrows .carousel-arrow{filter:invert(1)}:host .carousel-arrow-disabled{display:none}:host .carousel-dots{position:absolute;z-index:10;right:0;bottom:0;left:0;text-align:center}:host .carousel-dots .carousel-dot{display:inline-block;width:8px;height:8px;margin:4px;border:2px solid #fff;border-radius:100px}:host .carousel-dots .carousel-dot-active{background-color:#fff}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { events: [{\r\n                type: Output\r\n            }], id: [{\r\n                type: Input\r\n            }], height: [{\r\n                type: Input\r\n            }], width: [{\r\n                type: Input\r\n            }], autoplay: [{\r\n                type: Input\r\n            }], autoplayInterval: [{\r\n                type: Input\r\n            }], pauseOnHover: [{\r\n                type: Input\r\n            }], dots: [{\r\n                type: Input\r\n            }], borderRadius: [{\r\n                type: Input\r\n            }], margin: [{\r\n                type: Input\r\n            }], objectFit: [{\r\n                type: Input\r\n            }], minSwipeDistance: [{\r\n                type: Input\r\n            }], transitionDuration: [{\r\n                type: Input\r\n            }], transitionTimingFunction: [{\r\n                type: Input\r\n            }], videoProperties: [{\r\n                type: Input\r\n            }], counterSeparator: [{\r\n                type: Input\r\n            }], overflowCellsLimit: [{\r\n                type: Input\r\n            }], listeners: [{\r\n                type: Input\r\n            }], cellsToShow: [{\r\n                type: Input\r\n            }], cellsToScroll: [{\r\n                type: Input\r\n            }], freeScroll: [{\r\n                type: Input\r\n            }], arrows: [{\r\n                type: Input\r\n            }], arrowsOutside: [{\r\n                type: Input\r\n            }], arrowsTheme: [{\r\n                type: Input\r\n            }], cellWidth: [{\r\n                type: Input,\r\n                args: ['cellWidth']\r\n            }], isCounter: [{\r\n                type: Input,\r\n                args: ['counter']\r\n            }], hostClassCarousel: [{\r\n                type: HostBinding,\r\n                args: ['class.carousel']\r\n            }], hostStyleHeight: [{\r\n                type: HostBinding,\r\n                args: ['style.height']\r\n            }], hostStyleWidth: [{\r\n                type: HostBinding,\r\n                args: ['style.width']\r\n            }], onWindowResize: [{\r\n                type: HostListener,\r\n                args: ['window:resize', ['$event']]\r\n            }], onMouseEnter: [{\r\n                type: HostListener,\r\n                args: ['mouseenter', ['$event']]\r\n            }], onMouseLeave: [{\r\n                type: HostListener,\r\n                args: ['mouseleave', ['$event']]\r\n            }], onDragStart: [{\r\n                type: HostListener,\r\n                args: ['dragstart', ['$event']]\r\n            }] } });\n\nclass IvyCarouselModule {\r\n}\r\nIvyCarouselModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IvyCarouselModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nIvyCarouselModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.12\", ngImport: i0, type: IvyCarouselModule, declarations: [CarouselComponent], imports: [CommonModule], exports: [CarouselComponent] });\r\nIvyCarouselModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IvyCarouselModule, imports: [CommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: IvyCarouselModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [CarouselComponent],\r\n                    imports: [CommonModule],\r\n                    exports: [CarouselComponent],\r\n                    providers: [],\r\n                    bootstrap: [],\r\n                    entryComponents: [CarouselComponent]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of carousel-angular\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CarouselComponent, IvyCarouselModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}